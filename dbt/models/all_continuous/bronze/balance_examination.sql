SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Complete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Partial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN BAAEXSTS IS NULL THEN NULL 
ELSE SAFE_CAST(BAAEXSTS AS STRING) 
 END as status_of_a_mec_exam, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Safety exclusion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'SP refusal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'No time' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Physical limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Communication problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'SP ill/emergency' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(72 AS FLOAT64),0) AS INT64) THEN 'Error (technician/software/supply)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(84 AS FLOAT64),0) AS INT64) THEN 'SP With Child' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAAEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Other, specify' -- categorize numeric values
WHEN BAAEXCMT IS NULL THEN NULL 
ELSE SAFE_CAST(BAAEXCMT AS STRING) 
 END as comment_code_for_an_exam, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BAQ110 IS NULL THEN NULL 
ELSE SAFE_CAST(BAQ110 AS STRING) 
 END as can_you_stand_on_your_own, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ120 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ120 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BAQ120 IS NULL THEN NULL 
ELSE SAFE_CAST(BAQ120 AS STRING) 
 END as do_you_have_a_leg_brace, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BAQ130 IS NULL THEN NULL 
ELSE SAFE_CAST(BAQ130 AS STRING) 
 END as feeling_dizzy_or_lightheaded_now, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC11 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC11 AS STRING) 
 END as cond_1_trial_1_feet_together_eyes_open, 

CASE
WHEN BAXFTC11 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC11 AS FLOAT64) 
 END as cond_1_trial_1_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC12 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC12 AS STRING) 
 END as cond_1_trial_2_feet_together_eyes_open, 

CASE
WHEN BAXFTC12 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC12 AS FLOAT64) 
 END as cond_1_trial_2_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC21 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC21 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC21 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC21 AS STRING) 
 END as cond_2_trial_1_feet_together_eyes_closed, 

CASE
WHEN BAXFTC21 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC21 AS FLOAT64) 
 END as cond_2_trial_1_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC22 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC22 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC22 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC22 AS STRING) 
 END as cond_2_trial_2_feet_together_eyes_closed, 

CASE
WHEN BAXFTC22 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC22 AS FLOAT64) 
 END as cond_2_trial_2_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC31 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC31 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC31 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC31 AS STRING) 
 END as cond_3_trial_1_foam_pad_eyes_open, 

CASE
WHEN BAXFTC31 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC31 AS FLOAT64) 
 END as cond_3_trial_1_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC32 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC32 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC32 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC32 AS STRING) 
 END as cond_3_trial_2_foam_pad_eyes_open, 

CASE
WHEN BAXFTC32 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC32 AS FLOAT64) 
 END as cond_3_trial_2_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC41 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC41 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC41 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC41 AS STRING) 
 END as cond_4_trial_1_foam_pad_eyes_closed, 

CASE
WHEN BAXFTC41 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC41 AS FLOAT64) 
 END as cond_4_trial_1_failure_time_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC42 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BAXPFC42 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Dnp(did not pass)' -- categorize numeric values
WHEN BAXPFC42 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXPFC42 AS STRING) 
 END as cond_4_trial_2_foam_pad_eyes_closed, 

CASE
WHEN BAXFTC42 IS NULL THEN NULL 
ELSE SAFE_CAST(BAXFTC42 AS FLOAT64) 
 END as cond_4_trial_2_failure_time_seconds, 

CASE
WHEN WTSBA4YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA4YR AS FLOAT64) 
 END as balance_subsample_4_year_mec_weight, 

CASE
WHEN WTSBA2YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA2YR AS FLOAT64) 
 END as balance_subsample_2_year_mec_weight, 

CASE
WHEN WTSBA01 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA01 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_1, 

CASE
WHEN WTSBA02 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA02 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_2, 

CASE
WHEN WTSBA03 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA03 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_3, 

CASE
WHEN WTSBA04 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA04 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_4, 

CASE
WHEN WTSBA05 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA05 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_5, 

CASE
WHEN WTSBA06 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA06 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_6, 

CASE
WHEN WTSBA07 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA07 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_7, 

CASE
WHEN WTSBA08 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA08 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_8, 

CASE
WHEN WTSBA09 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA09 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_9, 

CASE
WHEN WTSBA10 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA10 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_10, 

CASE
WHEN WTSBA11 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA11 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_11, 

CASE
WHEN WTSBA12 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA12 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_12, 

CASE
WHEN WTSBA13 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA13 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_13, 

CASE
WHEN WTSBA14 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA14 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_14, 

CASE
WHEN WTSBA15 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA15 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_15, 

CASE
WHEN WTSBA16 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA16 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_16, 

CASE
WHEN WTSBA17 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA17 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_17, 

CASE
WHEN WTSBA18 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA18 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_18, 

CASE
WHEN WTSBA19 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA19 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_19, 

CASE
WHEN WTSBA20 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA20 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_20, 

CASE
WHEN WTSBA21 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA21 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_21, 

CASE
WHEN WTSBA22 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA22 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_22, 

CASE
WHEN WTSBA23 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA23 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_23, 

CASE
WHEN WTSBA24 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA24 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_24, 

CASE
WHEN WTSBA25 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA25 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_25, 

CASE
WHEN WTSBA26 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA26 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_26, 

CASE
WHEN WTSBA27 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA27 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_27, 

CASE
WHEN WTSBA28 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA28 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_28, 

CASE
WHEN WTSBA29 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA29 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_29, 

CASE
WHEN WTSBA30 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA30 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_30, 

CASE
WHEN WTSBA31 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA31 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_31, 

CASE
WHEN WTSBA32 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA32 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_32, 

CASE
WHEN WTSBA33 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA33 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_33, 

CASE
WHEN WTSBA34 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA34 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_34, 

CASE
WHEN WTSBA35 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA35 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_35, 

CASE
WHEN WTSBA36 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA36 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_36, 

CASE
WHEN WTSBA37 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA37 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_37, 

CASE
WHEN WTSBA38 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA38 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_38, 

CASE
WHEN WTSBA39 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA39 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_39, 

CASE
WHEN WTSBA40 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA40 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_40, 

CASE
WHEN WTSBA41 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA41 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_41, 

CASE
WHEN WTSBA42 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA42 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_42, 

CASE
WHEN WTSBA43 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA43 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_43, 

CASE
WHEN WTSBA44 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA44 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_44, 

CASE
WHEN WTSBA45 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA45 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_45, 

CASE
WHEN WTSBA46 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA46 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_46, 

CASE
WHEN WTSBA47 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA47 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_47, 

CASE
WHEN WTSBA48 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA48 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_48, 

CASE
WHEN WTSBA49 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA49 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_49, 

CASE
WHEN WTSBA50 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA50 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_50, 

CASE
WHEN WTSBA51 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA51 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_51, 

CASE
WHEN WTSBA52 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSBA52 AS FLOAT64) 
 END as balance_mec_weight_jack_knife_rep_52, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_balance_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/BAX_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/BAX_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/BAX.htm
*/
