SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2EXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Scan completed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2EXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Scan completed, but invalid' -- categorize numeric values
WHEN DX2EXSTS IS NULL THEN NULL 
ELSE SAFE_CAST(DX2EXSTS AS STRING) 
 END as exam_status, 

CASE
    WHEN DX2TOBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOBMC AS FLOAT64) 
 END as total_bone_mineral_content_g, 

CASE
    WHEN DX2TOBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOBMD AS FLOAT64) 
 END as total_bone_mineral_density_g_cm_2, 

CASE
    WHEN DX2TOFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOFAT AS FLOAT64) 
 END as total_fat_g, 

CASE
    WHEN DX2TOLE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOLE AS FLOAT64) 
 END as total_lean_excl_bmc_g, 

CASE
    WHEN DX2TOPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOPF AS FLOAT64) 
 END as total_percent_fat, 

CASE
    WHEN DX2TOA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOA AS FLOAT64) 
 END as total_area_cm_2, 

CASE
    WHEN DX2TOLI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOLI AS FLOAT64) 
 END as total_lean_incl_bmc_g, 

CASE
    WHEN DX2TOTOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOTOT AS FLOAT64) 
 END as total_lean_fat_g, 

CASE
    WHEN DX2HEA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEA AS FLOAT64) 
 END as head_area_cm_2, 

CASE
    WHEN DX2HEBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEBMC AS FLOAT64) 
 END as head_bone_mineral_content_g, 

CASE
    WHEN DX2HEBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEBMD AS FLOAT64) 
 END as head_bone_mineral_density_g_cm_2, 

CASE
    WHEN DX2HEFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEFAT AS FLOAT64) 
 END as head_fat_g, 

CASE
    WHEN DX2HELI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HELI AS FLOAT64) 
 END as head_lean_incl_bmc_g, 

CASE
    WHEN DX2HELE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HELE AS FLOAT64) 
 END as head_lean_excl_bmc_g, 

CASE
    WHEN DX2HEPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEPF AS FLOAT64) 
 END as head_percent_fat, 

CASE
    WHEN DX2HETOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HETOT AS FLOAT64) 
 END as head_total_g, 

CASE
    WHEN DX2LSA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LSA AS FLOAT64) 
 END as lumbar_spine_area_cm_2, 

CASE
    WHEN DX2LSBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LSBMC AS FLOAT64) 
 END as lumbar_spine_bmc_g, 

CASE
    WHEN DX2LSBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LSBMD AS FLOAT64) 
 END as lumbar_spine_bmd_g_cm_2, 

CASE
    WHEN DX2LAA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LAA AS FLOAT64) 
 END as left_arm_area_cm_2, 

CASE
    WHEN DX2LABMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LABMC AS FLOAT64) 
 END as left_arm_bmc_g, 

CASE
    WHEN DX2LABMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LABMD AS FLOAT64) 
 END as left_arm_bmd_g_cm_2, 

CASE
    WHEN DX2LAFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LAFAT AS FLOAT64) 
 END as left_arm_fat_g, 

CASE
    WHEN DX2LALI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LALI AS FLOAT64) 
 END as left_arm_lean_incl_bmc_g, 

CASE
    WHEN DX2LALE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LALE AS FLOAT64) 
 END as left_arm_lean_excl_bmc_g, 

CASE
    WHEN DX2LAPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LAPF AS FLOAT64) 
 END as left_arm_percent_fat, 

CASE
    WHEN DX2LATOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LATOT AS FLOAT64) 
 END as left_arm_total_g, 

CASE
    WHEN DX2LLA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLA AS FLOAT64) 
 END as left_leg_area_cm_2, 

CASE
    WHEN DX2LLBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLBMC AS FLOAT64) 
 END as left_leg_bmc_g, 

CASE
    WHEN DX2LLBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLBMD AS FLOAT64) 
 END as left_leg_bmd_g_cm_2, 

CASE
    WHEN DX2LLFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLFAT AS FLOAT64) 
 END as left_leg_fat_g, 

CASE
    WHEN DX2LLLI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLLI AS FLOAT64) 
 END as left_leg_lean_incl_bmc_g, 

CASE
    WHEN DX2LLLE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLLE AS FLOAT64) 
 END as left_leg_lean_excl_bmc_g, 

CASE
    WHEN DX2LLPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLPF AS FLOAT64) 
 END as left_leg_percent_fat, 

CASE
    WHEN DX2LLTOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLTOT AS FLOAT64) 
 END as left_leg_total_g, 

CASE
    WHEN DX2LRA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LRA AS FLOAT64) 
 END as left_ribs_area_cm_2, 

CASE
    WHEN DX2LRBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LRBMC AS FLOAT64) 
 END as left_ribs_bmc_g, 

CASE
    WHEN DX2LRBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LRBMD AS FLOAT64) 
 END as left_ribs_bmd_g_cm_2, 

CASE
    WHEN DX2PEA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2PEA AS FLOAT64) 
 END as pelvis_area_cm_2, 

CASE
    WHEN DX2PEBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2PEBMC AS FLOAT64) 
 END as pelvis_bmc_g, 

CASE
    WHEN DX2PEBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2PEBMD AS FLOAT64) 
 END as pelvis_bmd_g_cm_2, 

CASE
    WHEN DX2RAA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RAA AS FLOAT64) 
 END as right_arm_area_cm_2, 

CASE
    WHEN DX2RABMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RABMC AS FLOAT64) 
 END as right_arm_bmc_g, 

CASE
    WHEN DX2RABMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RABMD AS FLOAT64) 
 END as right_arm_bmd_g_cm_2, 

CASE
    WHEN DX2RAFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RAFAT AS FLOAT64) 
 END as right_arm_fat_g, 

CASE
    WHEN DX2RALI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RALI AS FLOAT64) 
 END as right_arm_lean_incl_bmc_g, 

CASE
    WHEN DX2RALE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RALE AS FLOAT64) 
 END as right_arm_lean_excl_bmc_g, 

CASE
    WHEN DX2RAPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RAPF AS FLOAT64) 
 END as right_arm_percent_fat, 

CASE
    WHEN DX2RATOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RATOT AS FLOAT64) 
 END as right_arm_total_g, 

CASE
    WHEN DX2RLA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLA AS FLOAT64) 
 END as right_leg_area_cm_2, 

CASE
    WHEN DX2RLBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLBMC AS FLOAT64) 
 END as right_leg_bmc_g, 

CASE
    WHEN DX2RLBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLBMD AS FLOAT64) 
 END as right_leg_bmd_g_cm_2, 

CASE
    WHEN DX2RLFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLFAT AS FLOAT64) 
 END as right_leg_fat_g, 

CASE
    WHEN DX2RLLI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLLI AS FLOAT64) 
 END as right_leg_lean_incl_bmc_g, 

CASE
    WHEN DX2RLLE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLLE AS FLOAT64) 
 END as right_leg_lean_excl_bmc_g, 

CASE
    WHEN DX2RLPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLPF AS FLOAT64) 
 END as right_leg_percent_fat, 

CASE
    WHEN DX2RLTOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLTOT AS FLOAT64) 
 END as right_leg_total_g, 

CASE
    WHEN DX2RRA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RRA AS FLOAT64) 
 END as right_ribs_area_cm_2, 

CASE
    WHEN DX2RRBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RRBMC AS FLOAT64) 
 END as right_ribs_bmc_g, 

CASE
    WHEN DX2RRBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RRBMD AS FLOAT64) 
 END as right_ribs_bmd_g_cm_2, 

CASE
    WHEN DX2TSA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TSA AS FLOAT64) 
 END as thoracic_spine_area_cm_2, 

CASE
    WHEN DX2TSBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TSBMC AS FLOAT64) 
 END as thoracic_spine_bmc_g, 

CASE
    WHEN DX2TSBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TSBMD AS FLOAT64) 
 END as thoracic_spine_bmd_g_cm_2, 

CASE
    WHEN DX2TRBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRBMC AS FLOAT64) 
 END as trunk_bmc_g, 

CASE
    WHEN DX2TRA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRA AS FLOAT64) 
 END as trunk_bone_area_cm_2, 

CASE
    WHEN DX2TRBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRBMD AS FLOAT64) 
 END as trunk_bone_bmd_g_cm_2, 

CASE
    WHEN DX2TRFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRFAT AS FLOAT64) 
 END as trunk_fat_g, 

CASE
    WHEN DX2TRLI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRLI AS FLOAT64) 
 END as trunk_lean_incl_bmc_g, 

CASE
    WHEN DX2TRLE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRLE AS FLOAT64) 
 END as trunk_lean_excl_bmc_g, 

CASE
    WHEN DX2TRPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRPF AS FLOAT64) 
 END as trunk_percent_fat, 

CASE
    WHEN DX2TRTOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRTOT AS FLOAT64) 
 END as trunk_total_g, 

CASE
    WHEN DX2STA IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STA AS FLOAT64) 
 END as subtotal_area_cm_2, 

CASE
    WHEN DX2STBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STBMC AS FLOAT64) 
 END as subtotal_bmc_g, 

CASE
    WHEN DX2STBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STBMD AS FLOAT64) 
 END as subtotal_bmd_g_cm_2, 

CASE
    WHEN DX2STFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STFAT AS FLOAT64) 
 END as subtotal_fat_g, 

CASE
    WHEN DX2STLI IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STLI AS FLOAT64) 
 END as subtotal_lean_incl_bmc_g, 

CASE
    WHEN DX2STLE IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STLE AS FLOAT64) 
 END as subtotal_lean_excl_bmc_g, 

CASE
    WHEN DX2STPF IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STPF AS FLOAT64) 
 END as subtotal_percent_fat, 

CASE
    WHEN DX2STTOT IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STTOT AS FLOAT64) 
 END as subtotal_total_excl_head_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TOBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TOBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DX2TOBCC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOBCC AS STRING) 
 END as total_bone_mineral_density_validity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TOPFC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TOPFC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DX2TOPFC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TOPFC AS STRING) 
 END as total_percent_fat_validity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HEBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HEBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HEBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HEBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HEBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2HEBV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HEBV AS STRING) 
 END as head_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2LABV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LABV AS STRING) 
 END as left_arm_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2LATV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LATV AS STRING) 
 END as left_arm_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2LLBV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLBV AS STRING) 
 END as left_leg_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2LLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2LLTV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2LLTV AS STRING) 
 END as left_leg_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RABV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2RABV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RABV AS STRING) 
 END as right_arm_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RATV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2RATV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RATV AS STRING) 
 END as right_arm_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2RLBV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLBV AS STRING) 
 END as right_leg_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2RLTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2RLTV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2RLTV AS STRING) 
 END as right_leg_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive X-ray noise' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRBV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2TRBV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRBV AS STRING) 
 END as trunk_bone_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive X-ray noise' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Arm/leg overlap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Positioning problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TRTV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2TRTV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TRTV AS STRING) 
 END as trunk_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HETV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HETV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Jewelry or other objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HETV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HETV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Body parts out of scan region' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2HETV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DX2HETV IS NULL THEN NULL 
ELSE SAFE_CAST(DX2HETV AS STRING) 
 END as head_tissue_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2STPFC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2STPFC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DX2STPFC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STPFC AS STRING) 
 END as subtotal_percent_fat_validity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2STBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2STBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DX2STBCC IS NULL THEN NULL 
ELSE SAFE_CAST(DX2STBCC AS STRING) 
 END as subtotal_bone_validity_code, 

CASE
    WHEN DX2DAY IS NULL THEN NULL 
ELSE SAFE_CAST(DX2DAY AS FLOAT64) 
 END as days_between_primary_and_second_exams, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TECH AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Same' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DX2TECH AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Different' -- categorize numeric values
WHEN DX2TECH IS NULL THEN NULL 
ELSE SAFE_CAST(DX2TECH AS STRING) 
 END as techs_for_primary_and_second_exams, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dual_energy_x_ray_absorptiometry_whole_body_second_exam_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/DXX_2_B.htm
*/
