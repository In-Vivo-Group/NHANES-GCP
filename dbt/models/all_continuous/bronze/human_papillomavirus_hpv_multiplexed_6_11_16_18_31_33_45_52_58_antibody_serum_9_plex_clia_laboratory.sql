SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV6 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV6 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV6 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV6 AS STRING) 
 END as hpv06_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV11 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV11 AS STRING) 
 END as hpv11_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV16 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV16 AS STRING) 
 END as hpv16_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV18 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV18 AS STRING) 
 END as hpv18_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV31 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV31 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV31 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV31 AS STRING) 
 END as hpv31_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV33 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV33 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV33 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV33 AS STRING) 
 END as hpv33_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV45 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV45 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV45 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV45 AS STRING) 
 END as hpv45_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV52 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV52 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV52 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV52 AS STRING) 
 END as hpv52_9_plex_coded_result, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV58 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBXPV58 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Negative' -- categorize numeric values
WHEN LBXPV58 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPV58 AS STRING) 
 END as hpv58_9_plex_coded_result, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_human_papillomavirus_hpv_multiplexed_6_11_16_18_31_33_45_52_58_antibody_serum_9_plex_clia_laboratory') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/HPVSRM_D.htm
*/
