SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Complete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Partial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN CSXEXSTS IS NULL THEN NULL 
ELSE SAFE_CAST(CSXEXSTS AS STRING) 
 END as overall_taste_smell_exam_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Safety exclusion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'No Time' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Physical Limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Communication Problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Equipment problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'SP ill/emergency' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'Eye specific limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(34 AS FLOAT64),0) AS INT64) THEN 'SP pregnant' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(38 AS FLOAT64),0) AS INT64) THEN 'Technical difficulty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(49 AS FLOAT64),0) AS INT64) THEN 'Urine not Collected' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(51 AS FLOAT64),0) AS INT64) THEN 'SP unable to comply' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(56 AS FLOAT64),0) AS INT64) THEN 'Came Late/Left Early' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(84 AS FLOAT64),0) AS INT64) THEN 'SP with Child' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXEXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(122 AS FLOAT64),0) AS INT64) THEN 'Language Barrier' -- categorize numeric values
WHEN CSXEXCMT IS NULL THEN NULL 
ELSE SAFE_CAST(CSXEXCMT AS STRING) 
 END as taste_smell_exam_status_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ245 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ245 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ245 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ245 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN CSQ245 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ245 AS STRING) 
 END as ever_had_quinine_allergy, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ241 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ241 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ241 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ241 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN CSQ241 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ241 AS STRING) 
 END as currently_pregnant_or_breast_feeding, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN CSQ260A IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260A AS STRING) 
 END as sneeze_frequently, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN CSQ260D IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260D AS STRING) 
 END as have_discolored_nasal_mucus, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN CSQ260G IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260G AS STRING) 
 END as have_nasal_blockage, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260I AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN CSQ260I IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260I AS STRING) 
 END as have_sinus_pain, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260N AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN CSQ260N IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260N AS STRING) 
 END as runny_nose, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ260M AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Checked' -- categorize numeric values
WHEN CSQ260M IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ260M AS STRING) 
 END as none_of_the_above, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ270 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ270 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ270 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSQ270 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN CSQ270 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ270 AS STRING) 
 END as type_of_nasal_blockage, 

CASE
    WHEN CSQ450 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ450 AS FLOAT64) 
 END as low_intermediate_light_85_candelas_m2, 

CASE
    WHEN CSQ460 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ460 AS FLOAT64) 
 END as high_intermediate_light_439_candelas_m2, 

CASE
    WHEN CSQ470 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ470 AS FLOAT64) 
 END as medium_test_light_193_candelas_m2, 

CASE
    WHEN CSQ480 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ480 AS FLOAT64) 
 END as low_test_light_4_3_candelas_m2, 

CASE
    WHEN CSQ490 IS NULL THEN NULL 
ELSE SAFE_CAST(CSQ490 AS FLOAT64) 
 END as high_test_light_1000_candelas_m2, 

CASE
    WHEN CSXQUIPG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXQUIPG AS FLOAT64) 
 END as tongue_tip_test_1_mm_quinine_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXQUIPT IS NULL THEN NULL 
ELSE SAFE_CAST(CSXQUIPT AS STRING) 
 END as tongue_tip_1mm_quinine_what_was_taste, 

CASE
    WHEN CSXNAPG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNAPG AS FLOAT64) 
 END as tongue_tip_test_1m_nacl_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAPT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXNAPT IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNAPT AS STRING) 
 END as tongue_tip_1m_nacl_what_was_taste, 

CASE
    WHEN CSXQUISG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXQUISG AS FLOAT64) 
 END as whole_mouth_test_1_mm_quinine_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXQUIST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXQUIST IS NULL THEN NULL 
ELSE SAFE_CAST(CSXQUIST AS STRING) 
 END as whole_mouth_1_mm_quinine_what_was_taste, 

CASE
    WHEN CSXSLTSG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSLTSG AS FLOAT64) 
 END as whole_mouth_test_1_m_nacl_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXSLTST IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSLTST AS STRING) 
 END as whole_mouth_1_m_nacl_what_was_taste, 

CASE
    WHEN CSXNASG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNASG AS FLOAT64) 
 END as whole_mouth_test_32_m_nacl_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNAST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXNAST IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNAST AS STRING) 
 END as whole_mouth_32_nacl_what_was_taste, 

CASE
    WHEN REPLACE(CSXTSEQ,'.0','') = 'A' THEN '1M NaCl, 1mM quinine, 0.32M NaCl' -- categorize string values 
WHEN REPLACE(CSXTSEQ,'.0','') = 'B' THEN '0.32M NaCl, 1mM quinine, 1M NaCl' -- categorize string values 
ELSE SAFE_CAST(CSXTSEQ AS STRING) 
 END as whole_mouth_taste_test_sequence, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXCHOOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Lemon' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXCHOOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Chocolate' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXCHOOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Smoke' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXCHOOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Black pepper' -- categorize numeric values
WHEN CSXCHOOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXCHOOD AS STRING) 
 END as smell_test_chocolate_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSBOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Strawberry' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSBOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Garlic' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSBOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Leather' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSBOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Gasoline' -- categorize numeric values
WHEN CSXSBOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSBOD AS STRING) 
 END as smell_test_strawberry_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSMKOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Garlic' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSMKOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Grass' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSMKOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Smoke' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSMKOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Peach' -- categorize numeric values
WHEN CSXSMKOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSMKOD AS STRING) 
 END as smell_test_smoke_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXLEAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Mint' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXLEAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Flower' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXLEAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Leather' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXLEAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Apple' -- categorize numeric values
WHEN CSXLEAOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXLEAOD AS STRING) 
 END as smell_test_leather_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSOAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Soap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSOAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Black Pepper' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSOAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Leather' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSOAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Peanut' -- categorize numeric values
WHEN CSXSOAOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSOAOD AS STRING) 
 END as smell_test_soap_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXGRAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Gasoline' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXGRAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Grape' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXGRAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Rose' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXGRAOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Peanut' -- categorize numeric values
WHEN CSXGRAOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXGRAOD AS STRING) 
 END as smell_test_grape_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXONOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Chocolate' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXONOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Strawberry' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXONOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Onion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXONOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Fruit Punch' -- categorize numeric values
WHEN CSXONOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXONOD AS STRING) 
 END as smell_test_onion_scent, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNGSOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Orange' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNGSOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Cinnamon' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNGSOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Cola' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNGSOD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Natural Gas' -- categorize numeric values
WHEN CSXNGSOD IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNGSOD AS STRING) 
 END as smell_test_natural_gas_scent, 

CASE
    WHEN CSXSLTRT IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSLTRT AS FLOAT64) 
 END as whole_mouth_repeat_1m_nacl_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXSLTRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXSLTRG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXSLTRG AS STRING) 
 END as repeat_1m_nacl_what_was_taste, 

CASE
    WHEN CSXNART IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNART AS FLOAT64) 
 END as whole_mouth_repeat_0_32m_nacl_glms, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNARG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Salty' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNARG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Bitter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNARG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Something else' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNARG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'No Taste' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSXNARG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Sour' -- categorize numeric values
WHEN CSXNARG IS NULL THEN NULL 
ELSE SAFE_CAST(CSXNARG AS STRING) 
 END as repeat_32m_nacl_what_was_taste, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(CSAEFFRT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Very good' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSAEFFRT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Good' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSAEFFRT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Fair' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSAEFFRT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Poor' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(CSAEFFRT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Unable to Cooperate' -- categorize numeric values
WHEN CSAEFFRT IS NULL THEN NULL 
ELSE SAFE_CAST(CSAEFFRT AS STRING) 
 END as participant_s_understanding_of_test, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_taste_smell_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/CSX_H.htm
*/
