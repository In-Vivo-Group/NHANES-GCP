SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXASPNST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Spine scan completed, all vertebrae are valid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXASPNST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Spine scan completed, but one or more vertebrae are invalid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXASPNST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Spine not scanned, pregnancy' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXASPNST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Spine not scanned, weight > 300 lbs' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXASPNST AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Spine not scanned, other reason' -- categorize numeric values
WHEN DXASPNST IS NULL THEN NULL 
ELSE SAFE_CAST(DXASPNST AS STRING) 
 END as spine_scan_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXOSBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXOSBCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DXXOSBCC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXOSBCC AS STRING) 
 END as total_spine_bmd_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other (degenerative diseases, spinal fusion, fractures)' -- categorize numeric values
WHEN DXXL1BCC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1BCC AS STRING) 
 END as l1_bmd_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other (degenerative diseases, spinal fusion, fractures)' -- categorize numeric values
WHEN DXXL2BCC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2BCC AS STRING) 
 END as l2_bmd_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other (degenerative diseases, spinal fusion, fractures)' -- categorize numeric values
WHEN DXXL3BCC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3BCC AS STRING) 
 END as l3_bmd_invalidity_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4BCC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other (degenerative diseases, spinal fusion, fractures)' -- categorize numeric values
WHEN DXXL4BCC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4BCC AS STRING) 
 END as l4_bmd_invalidity_code, 

CASE
    WHEN DXXOSBMD IS NULL THEN NULL 
ELSE SAFE_CAST(DXXOSBMD AS FLOAT64) 
 END as total_spine_bmd, 

CASE
    WHEN DXXOSBMC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXOSBMC AS FLOAT64) 
 END as total_spine_bmc, 

CASE
    WHEN DXXOSA IS NULL THEN NULL 
ELSE SAFE_CAST(DXXOSA AS FLOAT64) 
 END as total_spine_area, 

CASE
    WHEN DXXL1BMD IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1BMD AS FLOAT64) 
 END as l1_bmd, 

CASE
    WHEN DXXL1BMC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1BMC AS FLOAT64) 
 END as l1_bmc, 

CASE
    WHEN DXXL1A IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1A AS FLOAT64) 
 END as l1_area, 

CASE
    WHEN DXXL2BMD IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2BMD AS FLOAT64) 
 END as l2_bmd, 

CASE
    WHEN DXXL2BMC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2BMC AS FLOAT64) 
 END as l2_bmc, 

CASE
    WHEN DXXL2A IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2A AS FLOAT64) 
 END as l2_area, 

CASE
    WHEN DXXL3BMD IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3BMD AS FLOAT64) 
 END as l3_bmd, 

CASE
    WHEN DXXL3BMC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3BMC AS FLOAT64) 
 END as l3_bmc, 

CASE
    WHEN DXXL3A IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3A AS FLOAT64) 
 END as l3_area, 

CASE
    WHEN DXXL4BMD IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4BMD AS FLOAT64) 
 END as l4_bmd, 

CASE
    WHEN DXXL4BMC IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4BMC AS FLOAT64) 
 END as l4_bmc, 

CASE
    WHEN DXXL4A IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4A AS FLOAT64) 
 END as l4_area, 

CASE
    WHEN DXASPNK IS NULL THEN NULL 
ELSE SAFE_CAST(DXASPNK AS FLOAT64) 
 END as calculated_k_for_spine, 

CASE
    WHEN DXASPND0 IS NULL THEN NULL 
ELSE SAFE_CAST(DXASPND0 AS FLOAT64) 
 END as calculated_do_for_spine, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXTBSSV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXTBSSV AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Invalid data' -- categorize numeric values
WHEN DXXTBSSV IS NULL THEN NULL 
ELSE SAFE_CAST(DXXTBSSV AS STRING) 
 END as trabecular_bone_score_invalidity_code, 

CASE
    WHEN DXXTOTBS IS NULL THEN NULL 
ELSE SAFE_CAST(DXXTOTBS AS FLOAT64) 
 END as total_trabecular_bone_score, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXTBSM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Not missing' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXTBSM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Missing, less than two valid vertebra' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXTBSM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Missing, no BMI' -- categorize numeric values
WHEN DXXTBSM IS NULL THEN NULL 
ELSE SAFE_CAST(DXXTBSM AS STRING) 
 END as tbs_missing_data_reason, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL1TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DXXL1TQA IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1TQA AS STRING) 
 END as l1_tbs_invalidity_code, 

CASE
    WHEN DXXL1TBS IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL1TBS AS FLOAT64) 
 END as l1_tbs, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL2TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DXXL2TQA IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2TQA AS STRING) 
 END as l2_tbs_invalidity_code, 

CASE
    WHEN DXXL2TBS IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL2TBS AS FLOAT64) 
 END as l2_tbs, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL3TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DXXL3TQA IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3TQA AS STRING) 
 END as l3_tbs_invalidity_code, 

CASE
    WHEN DXXL3TBS IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL3TBS AS FLOAT64) 
 END as l3_tbs, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Valid data' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Objects not removed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-removable objects such as implants' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Excessive x-ray noise due to morbid obesity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Insufficient scan area' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Movement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DXXL4TQA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DXXL4TQA IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4TQA AS STRING) 
 END as l4_tbs_invalidity_code, 

CASE
    WHEN DXXL4TBS IS NULL THEN NULL 
ELSE SAFE_CAST(DXXL4TBS AS FLOAT64) 
 END as l4_tbs, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dual_energy_x_ray_absorptiometry_spine_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2009-2010/DXXSPN_F.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/DXXSPN_E.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/DXXSPN_D.htm
*/
