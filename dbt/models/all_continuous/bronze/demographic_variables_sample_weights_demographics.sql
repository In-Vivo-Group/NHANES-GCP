SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(SDDSRVYR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'NHANES 2011-2012 public release' -- categorize numeric values
WHEN SDDSRVYR IS NULL THEN NULL 
ELSE SAFE_CAST(SDDSRVYR AS STRING) 
 END as data_release_cycle, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDSTATR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Interviewed only' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDSTATR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Both interviewed and MEC examined' -- categorize numeric values
WHEN RIDSTATR IS NULL THEN NULL 
ELSE SAFE_CAST(RIDSTATR AS STRING) 
 END as interview_examination_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Male' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Female' -- categorize numeric values
WHEN RIAGENDR IS NULL THEN NULL 
ELSE SAFE_CAST(RIAGENDR AS STRING) 
 END as gender, 

CASE
    WHEN RIDAGEYR IS NULL THEN NULL 
ELSE SAFE_CAST(RIDAGEYR AS FLOAT64) 
 END as age_in_years_at_screening, 

CASE
    WHEN RIDAGEMN IS NULL THEN NULL 
ELSE SAFE_CAST(RIDAGEMN AS FLOAT64) 
 END as age_in_months_at_screening_0_to_24_mos, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Mexican American' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Other Hispanic' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic White' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic Black' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Other Race - Including Multi-Racial' -- categorize numeric values
WHEN RIDRETH1 IS NULL THEN NULL 
ELSE SAFE_CAST(RIDRETH1 AS STRING) 
 END as race_hispanic_origin, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Mexican American' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Other Hispanic' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '3' THEN 'Non-Hispanic White' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '4' THEN 'Non-Hispanic Black' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '6' THEN 'Non-Hispanic Asian' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN 'Other Race - Including Multi-Racial' -- categorize string values 
WHEN RIDRETH3 IS NULL THEN NULL 
ELSE SAFE_CAST(RIDRETH3 AS STRING) 
 END as race_hispanic_origin_w_nh_asian, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDEXMON AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'November 1 through April 30' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDEXMON AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'May 1 through October 31' -- categorize numeric values
WHEN RIDEXMON IS NULL THEN NULL 
ELSE SAFE_CAST(RIDEXMON AS STRING) 
 END as six_month_time_period, 

CASE
    WHEN RIDEXAGY IS NOT NULL THEN SAFE_CAST(RIDEXAGY AS FLOAT64) -- correct wrong data types for numerical data 
WHEN RIDEXAGY IS NULL THEN NULL 
ELSE SAFE_CAST(RIDEXAGY AS FLOAT64) 
 END as age_in_years_at_exam_2_to_19_years, 

CASE
    WHEN RIDEXAGM IS NOT NULL THEN SAFE_CAST(RIDEXAGM AS FLOAT64) -- correct wrong data types for numerical data 
WHEN RIDEXAGM IS NULL THEN NULL 
ELSE SAFE_CAST(RIDEXAGM AS FLOAT64) 
 END as age_in_months_at_exam_0_to_19_years, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQMILIZ AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQMILIZ AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQMILIZ AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQMILIZ AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN 'Dont Know' -- categorize string values 
WHEN DMQMILIZ IS NULL THEN NULL 
ELSE SAFE_CAST(DMQMILIZ AS STRING) 
 END as served_active_duty_in_us_armed_forces, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQADFC AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQADFC AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQADFC AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMQADFC AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN 'Dont Know' -- categorize string values 
WHEN DMQADFC IS NULL THEN NULL 
ELSE SAFE_CAST(DMQADFC AS STRING) 
 END as served_in_a_foreign_country, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN4 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Born in 50 US states or Washington, DC' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN4 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Others' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN4 AS FLOAT64),0) AS INT64) AS STRING) = '77' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN4 AS FLOAT64),0) AS INT64) AS STRING) = '99' THEN 'Dont Know' -- categorize string values 
WHEN DMDBORN4 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDBORN4 AS STRING) 
 END as country_of_birth, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDCITZN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Citizen by birth or naturalization' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDCITZN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Not a citizen of the US' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDCITZN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDCITZN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDCITZN IS NULL THEN NULL 
ELSE SAFE_CAST(DMDCITZN AS STRING) 
 END as citizenship_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Less than 1 year' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1 year or more, but less than 5 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '5 year or more, but less than 10 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '10 year or more, but less than 15 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN '15 year or more, but less than 20 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN '20 year or more, but less than 30 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN '30 year or more, but less than 40 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN '40 year or more, but less than 50 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN '50 years or more' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDYRSUS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDYRSUS IS NULL THEN NULL 
ELSE SAFE_CAST(DMDYRSUS AS STRING) 
 END as length_of_time_in_us, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Never attended / kindergarten only' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '1st grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '2nd grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '3rd grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '4th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN '5th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN '6th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN '7th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN '8th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN '9th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN '10th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(11 AS FLOAT64),0) AS INT64) THEN '11th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN '12th grade, no diploma' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(13 AS FLOAT64),0) AS INT64) THEN 'High school graduate' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(14 AS FLOAT64),0) AS INT64) THEN 'GED or equivalent' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(15 AS FLOAT64),0) AS INT64) THEN 'More than high school' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(55 AS FLOAT64),0) AS INT64) THEN 'Less than 5th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(66 AS FLOAT64),0) AS INT64) THEN 'Less than 9th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDEDUC3 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDEDUC3 AS STRING) 
 END as education_level_children_youth_6_19, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Less than 9th grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '9-11th grade (Includes 12th grade with no diploma)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'High school graduate/GED or equivalent' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Some college or AA degree' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'College graduate or above' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDEDUC2 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDEDUC2 AS STRING) 
 END as education_level_adults_20, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Married' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Widowed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Divorced' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Separated' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Never married' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Living with partner' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDMARTL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDMARTL IS NULL THEN NULL 
ELSE SAFE_CAST(DMDMARTL AS STRING) 
 END as marital_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDEXPRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes, positive lab pregnancy test or self-reported pregnant at exam' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDEXPRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'The participant was not pregnant at exam' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDEXPRG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Cannot ascertain if the participant is pregnant at exam' -- categorize numeric values
WHEN RIDEXPRG IS NULL THEN NULL 
ELSE SAFE_CAST(RIDEXPRG AS STRING) 
 END as pregnancy_status_at_exam, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIALANG AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'English' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIALANG AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Spanish' -- categorize string values 
WHEN SIALANG IS NULL THEN NULL 
ELSE SAFE_CAST(SIALANG AS STRING) 
 END as language_of_sp_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN SIAPROXY IS NULL THEN NULL 
ELSE SAFE_CAST(SIAPROXY AS STRING) 
 END as proxy_used_in_sp_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(SIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN SIAINTRP IS NULL THEN NULL 
ELSE SAFE_CAST(SIAINTRP AS STRING) 
 END as interpreter_used_in_sp_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIALANG AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'English' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIALANG AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Spanish' -- categorize string values 
WHEN FIALANG IS NULL THEN NULL 
ELSE SAFE_CAST(FIALANG AS STRING) 
 END as language_of_family_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN FIAPROXY IS NULL THEN NULL 
ELSE SAFE_CAST(FIAPROXY AS STRING) 
 END as proxy_used_in_family_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(FIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN FIAINTRP IS NULL THEN NULL 
ELSE SAFE_CAST(FIAINTRP AS STRING) 
 END as interpreter_used_in_family_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIALANG AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'English' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIALANG AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Spanish' -- categorize string values 
WHEN MIALANG IS NULL THEN NULL 
ELSE SAFE_CAST(MIALANG AS STRING) 
 END as language_of_mec_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIAPROXY AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN MIAPROXY IS NULL THEN NULL 
ELSE SAFE_CAST(MIAPROXY AS STRING) 
 END as proxy_used_in_mec_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Yes' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(MIAINTRP AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'No' -- categorize string values 
WHEN MIAINTRP IS NULL THEN NULL 
ELSE SAFE_CAST(MIAINTRP AS STRING) 
 END as interpreter_used_in_mec_interview, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(AIALANGA AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'English' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(AIALANGA AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Spanish' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(AIALANGA AS FLOAT64),0) AS INT64) AS STRING) = '3' THEN 'Asian languages' -- categorize string values 
WHEN AIALANGA IS NULL THEN NULL 
ELSE SAFE_CAST(AIALANGA AS STRING) 
 END as language_of_acasi_interview, 

CASE
    WHEN WTINT2YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTINT2YR AS FLOAT64) 
 END as full_sample_2_year_interview_weight, 

CASE
    WHEN WTMEC2YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTMEC2YR AS FLOAT64) 
 END as full_sample_2_year_mec_exam_weight, 

CASE
    WHEN SDMVPSU IS NULL THEN NULL 
ELSE SAFE_CAST(SDMVPSU AS FLOAT64) 
 END as masked_variance_pseudo_psu, 

CASE
    WHEN SDMVSTRA IS NULL THEN NULL 
ELSE SAFE_CAST(SDMVSTRA AS FLOAT64) 
 END as masked_variance_pseudo_stratum, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN '$ 0 to $ 4,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN '$ 5,000 to $ 9,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '3' THEN '$10,000 to $14,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '4' THEN '$15,000 to $19,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '5' THEN '$20,000 to $24,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '6' THEN '$25,000 to $34,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN '$35,000 to $44,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '8' THEN '$45,000 to $54,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN '$55,000 to $64,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '10' THEN '$65,000 to $74,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '12' THEN '$20,000 and Over' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '13' THEN 'Under $20,000' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '14' THEN '$75,000 to $99,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '15' THEN '$100,000 and Over' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '77' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDHHIN2 AS FLOAT64),0) AS INT64) AS STRING) = '99' THEN 'Dont know' -- categorize string values 
WHEN INDHHIN2 IS NULL THEN NULL 
ELSE SAFE_CAST(INDHHIN2 AS STRING) 
 END as annual_household_income, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN '$ 0 to $ 4,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN '$ 5,000 to $ 9,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '3' THEN '$10,000 to $14,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '4' THEN '$15,000 to $19,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '5' THEN '$20,000 to $24,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '6' THEN '$25,000 to $34,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN '$35,000 to $44,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '8' THEN '$45,000 to $54,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN '$55,000 to $64,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '10' THEN '$65,000 to $74,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '12' THEN '$20,000 and Over' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '13' THEN 'Under $20,000' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '14' THEN '$75,000 to $99,999' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '15' THEN '$100,000 and Over' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '77' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(INDFMIN2 AS FLOAT64),0) AS INT64) AS STRING) = '99' THEN 'Dont know' -- categorize string values 
WHEN INDFMIN2 IS NULL THEN NULL 
ELSE SAFE_CAST(INDFMIN2 AS STRING) 
 END as annual_family_income, 

CASE
    WHEN INDFMPIR IS NULL THEN NULL 
ELSE SAFE_CAST(INDFMPIR AS FLOAT64) 
 END as ratio_of_family_income_to_poverty, 

CASE
    WHEN DMDHHSIZ IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHHSIZ AS FLOAT64) 
 END as total_number_of_people_in_the_household, 

CASE
    WHEN DMDFMSIZ IS NOT NULL THEN SAFE_CAST(DMDFMSIZ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDFMSIZ IS NOT NULL THEN SAFE_CAST(DMDFMSIZ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDFMSIZ IS NULL THEN NULL 
ELSE SAFE_CAST(DMDFMSIZ AS FLOAT64) 
 END as total_number_of_people_in_the_family, 

CASE
    WHEN DMDHHSZA IS NOT NULL THEN SAFE_CAST(DMDHHSZA AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZA IS NOT NULL THEN SAFE_CAST(DMDHHSZA AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZA IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHHSZA AS FLOAT64) 
 END as of_children_5_years_or_younger_in_hh, 

CASE
    WHEN DMDHHSZB IS NOT NULL THEN SAFE_CAST(DMDHHSZB AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZB IS NOT NULL THEN SAFE_CAST(DMDHHSZB AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZB IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHHSZB AS FLOAT64) 
 END as of_children_6_17_years_old_in_hh, 

CASE
    WHEN DMDHHSZE IS NOT NULL THEN SAFE_CAST(DMDHHSZE AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZE IS NOT NULL THEN SAFE_CAST(DMDHHSZE AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DMDHHSZE IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHHSZE AS FLOAT64) 
 END as of_adults_60_years_or_older_in_hh, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRGND AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Male' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRGND AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Female' -- categorize numeric values
WHEN DMDHRGND IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRGND AS STRING) 
 END as hh_ref_person_s_gender, 

CASE
    WHEN DMDHRAGE IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRAGE AS FLOAT64) 
 END as hh_ref_person_s_age_in_years, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR4 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Born in 50 US states or Washington, DC' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR4 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Others' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR4 AS FLOAT64),0) AS INT64) AS STRING) = '77' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR4 AS FLOAT64),0) AS INT64) AS STRING) = '99' THEN 'Dont Know' -- categorize string values 
WHEN DMDHRBR4 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRBR4 AS STRING) 
 END as hh_ref_person_s_country_of_birth, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Less Than 9th Grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '9-11th Grade (Includes 12th grade with no diploma)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'High School Grad/GED or Equivalent' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Some College or AA degree' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'College Graduate or above' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHREDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDHREDU IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHREDU AS STRING) 
 END as hh_ref_person_s_education_level, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Married' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Widowed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Divorced' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Separated' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Never married' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Living with partner' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRMAR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDHRMAR IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRMAR AS STRING) 
 END as hh_ref_person_s_marital_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Less Than 9th Grade' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '9-11th Grade (Includes 12th grade with no diploma)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'High School Grad/GED or Equivalent' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Some College or AA degree' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'College Graduate or above' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHSEDU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont Know' -- categorize numeric values
WHEN DMDHSEDU IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHSEDU AS STRING) 
 END as hh_ref_person_s_spouse_s_education_level, 

CASE
    WHEN RIDAGEEX IS NULL THEN NULL 
ELSE SAFE_CAST(RIDAGEEX AS FLOAT64) 
 END as age_in_months_at_exam_recode, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMQMILIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMQMILIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMQMILIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMQMILIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DMQMILIT IS NULL THEN NULL 
ELSE SAFE_CAST(DMQMILIT AS STRING) 
 END as served_in_the_us_armed_forces, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Born in 50 US States or Washington, DC' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Born in Mexico' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '4' THEN 'Born in Other Spanish Speaking Country' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '5' THEN 'Born in Other Non-Spanish Speaking Country' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDBORN2 AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN 'Dont Know' -- categorize string values 
WHEN DMDBORN2 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDBORN2 AS STRING) 
 END as country_of_birth_recode, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDSCHOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'In school' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDSCHOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'On vacation from school (between grades)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDSCHOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Neither in school or on vacation from school (between grades)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDSCHOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDSCHOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DMDSCHOL IS NULL THEN NULL 
ELSE SAFE_CAST(DMDSCHOL AS STRING) 
 END as now_attending_school, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Born in 50 US States or Washington, DC' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Born in Mexico' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '4' THEN 'Born in Other Spanish Speaking Country' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '5' THEN 'Born in Other Non-Spanish Speaking Country' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '7' THEN 'Refused' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(DMDHRBR2 AS FLOAT64),0) AS INT64) AS STRING) = '9' THEN 'Dont know' -- categorize string values 
WHEN DMDHRBR2 IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRBR2 AS STRING) 
 END as hh_ref_person_country_of_birth, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(AIALANG AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'English' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(AIALANG AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Spanish' -- categorize string values 
WHEN AIALANG IS NULL THEN NULL 
ELSE SAFE_CAST(AIALANG AS STRING) 
 END as language_of_acasi_interview_AIALANG, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDBORN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Born in 50 US States or Washington, DC' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDBORN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Born in Mexico' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDBORN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Born Elsewhere' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDBORN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN DMDBORN IS NULL THEN NULL 
ELSE SAFE_CAST(DMDBORN AS STRING) 
 END as country_of_birth_recode_DMDBORN, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '$ 0 to $ 4,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '$ 5,000 to $ 9,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '$10,000 to $14,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '$15,000 to $19,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN '$20,000 to $24,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN '$25,000 to $34,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN '$35,000 to $44,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN '$45,000 to $54,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN '$55,000 to $64,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN '$65,000 to $74,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(11 AS FLOAT64),0) AS INT64) THEN '$75,000 and Over' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'Over $20,000' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(13 AS FLOAT64),0) AS INT64) THEN 'Under $20,000' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDHHINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN INDHHINC IS NULL THEN NULL 
ELSE SAFE_CAST(INDHHINC AS STRING) 
 END as annual_household_income_INDHHINC, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '$ 0 to $ 4,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '$ 5,000 to $ 9,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '$10,000 to $14,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '$15,000 to $19,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN '$20,000 to $24,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN '$25,000 to $34,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN '$35,000 to $44,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN '$45,000 to $54,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN '$55,000 to $64,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN '$65,000 to $74,999' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(11 AS FLOAT64),0) AS INT64) THEN '$75,000 and Over' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'Over $20,000' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(13 AS FLOAT64),0) AS INT64) THEN 'Under $20,000' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(77 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(INDFMINC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN INDFMINC IS NULL THEN NULL 
ELSE SAFE_CAST(INDFMINC AS STRING) 
 END as annual_family_income_INDFMINC, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRBRN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Born in 50 US States or Washington, DC' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRBRN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Born in Mexico' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRBRN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Born Elsewhere' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRBRN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDHRBRN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DMDHRBRN IS NULL THEN NULL 
ELSE SAFE_CAST(DMDHRBRN AS STRING) 
 END as hh_ref_person_country_of_birth_DMDHRBRN, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic White' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic Black' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Mexican American' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Other Race - Including Multi-Racial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Other Hispanic' -- categorize numeric values
WHEN RIDRETH2 IS NULL THEN NULL 
ELSE SAFE_CAST(RIDRETH2 AS STRING) 
 END as linked_nh3_race_ethnicity_recode, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Less Than High School' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'High School Diploma (including GED)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'More Than High School' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DMDEDUC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DMDEDUC IS NULL THEN NULL 
ELSE SAFE_CAST(DMDEDUC AS STRING) 
 END as education_recode_old_version, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDPREG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes, based on positive lab pregnancy test, self-reported pregnancy status, screener interview data or menstrual period history' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDPREG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'SP not pregnant' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDPREG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Cannot ascertain if SP is pregnant' -- categorize numeric values
WHEN RIDPREG IS NULL THEN NULL 
ELSE SAFE_CAST(RIDPREG AS STRING) 
 END as pregnancy_status_recode_old_version, 

CASE
    WHEN WTINT4YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTINT4YR AS FLOAT64) 
 END as full_sample_4_year_interview_weight, 

CASE
    WHEN WTMEC4YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTMEC4YR AS FLOAT64) 
 END as full_sample_4_year_mec_exam_weight, 

CASE
    WHEN SDJ1REPN IS NULL THEN NULL 
ELSE SAFE_CAST(SDJ1REPN AS FLOAT64) 
 END as jack_knife_replicate_number, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMAETHN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Value Imputed' -- categorize numeric values
WHEN DMAETHN IS NULL THEN NULL 
ELSE SAFE_CAST(DMAETHN AS STRING) 
 END as logical_imputation_flag_for_ethnicity, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DMARACE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Value Imputed' -- categorize numeric values
WHEN DMARACE IS NULL THEN NULL 
ELSE SAFE_CAST(DMARACE AS STRING) 
 END as logical_imputation_flag_for_race_recode, 

CASE
    WHEN WTMREP01 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP01 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_01, 

CASE
    WHEN WTMREP02 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP02 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_02, 

CASE
    WHEN WTMREP03 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP03 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_03, 

CASE
    WHEN WTMREP04 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP04 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_04, 

CASE
    WHEN WTMREP05 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP05 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_05, 

CASE
    WHEN WTMREP06 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP06 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_06, 

CASE
    WHEN WTMREP07 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP07 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_07, 

CASE
    WHEN WTMREP08 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP08 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_08, 

CASE
    WHEN WTMREP09 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP09 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_09, 

CASE
    WHEN WTMREP10 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP10 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_10, 

CASE
    WHEN WTMREP11 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP11 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_11, 

CASE
    WHEN WTMREP12 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP12 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_12, 

CASE
    WHEN WTMREP13 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP13 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_13, 

CASE
    WHEN WTMREP14 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP14 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_14, 

CASE
    WHEN WTMREP15 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP15 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_15, 

CASE
    WHEN WTMREP16 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP16 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_16, 

CASE
    WHEN WTMREP17 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP17 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_17, 

CASE
    WHEN WTMREP18 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP18 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_18, 

CASE
    WHEN WTMREP19 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP19 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_19, 

CASE
    WHEN WTMREP20 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP20 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_20, 

CASE
    WHEN WTMREP21 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP21 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_21, 

CASE
    WHEN WTMREP22 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP22 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_22, 

CASE
    WHEN WTMREP23 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP23 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_23, 

CASE
    WHEN WTMREP24 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP24 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_24, 

CASE
    WHEN WTMREP25 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP25 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_25, 

CASE
    WHEN WTMREP26 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP26 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_26, 

CASE
    WHEN WTMREP27 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP27 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_27, 

CASE
    WHEN WTMREP28 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP28 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_28, 

CASE
    WHEN WTMREP29 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP29 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_29, 

CASE
    WHEN WTMREP30 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP30 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_30, 

CASE
    WHEN WTMREP31 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP31 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_31, 

CASE
    WHEN WTMREP32 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP32 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_32, 

CASE
    WHEN WTMREP33 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP33 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_33, 

CASE
    WHEN WTMREP34 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP34 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_34, 

CASE
    WHEN WTMREP35 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP35 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_35, 

CASE
    WHEN WTMREP36 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP36 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_36, 

CASE
    WHEN WTMREP37 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP37 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_37, 

CASE
    WHEN WTMREP38 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP38 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_38, 

CASE
    WHEN WTMREP39 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP39 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_39, 

CASE
    WHEN WTMREP40 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP40 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_40, 

CASE
    WHEN WTMREP41 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP41 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_41, 

CASE
    WHEN WTMREP42 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP42 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_42, 

CASE
    WHEN WTMREP43 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP43 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_43, 

CASE
    WHEN WTMREP44 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP44 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_44, 

CASE
    WHEN WTMREP45 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP45 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_45, 

CASE
    WHEN WTMREP46 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP46 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_46, 

CASE
    WHEN WTMREP47 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP47 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_47, 

CASE
    WHEN WTMREP48 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP48 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_48, 

CASE
    WHEN WTMREP49 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP49 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_49, 

CASE
    WHEN WTMREP50 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP50 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_50, 

CASE
    WHEN WTMREP51 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP51 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_51, 

CASE
    WHEN WTMREP52 IS NULL THEN NULL 
ELSE SAFE_CAST(WTMREP52 AS FLOAT64) 
 END as mec_exam_weight_jack_knife_replicate_52, 

CASE
    WHEN WTIREP01 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP01 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_01, 

CASE
    WHEN WTIREP02 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP02 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_02, 

CASE
    WHEN WTIREP03 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP03 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_03, 

CASE
    WHEN WTIREP04 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP04 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_04, 

CASE
    WHEN WTIREP05 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP05 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_05, 

CASE
    WHEN WTIREP06 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP06 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_06, 

CASE
    WHEN WTIREP07 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP07 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_07, 

CASE
    WHEN WTIREP08 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP08 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_08, 

CASE
    WHEN WTIREP09 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP09 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_09, 

CASE
    WHEN WTIREP10 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP10 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_10, 

CASE
    WHEN WTIREP11 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP11 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_11, 

CASE
    WHEN WTIREP12 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP12 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_12, 

CASE
    WHEN WTIREP13 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP13 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_13, 

CASE
    WHEN WTIREP14 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP14 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_14, 

CASE
    WHEN WTIREP15 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP15 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_15, 

CASE
    WHEN WTIREP16 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP16 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_16, 

CASE
    WHEN WTIREP17 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP17 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_17, 

CASE
    WHEN WTIREP18 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP18 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_18, 

CASE
    WHEN WTIREP19 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP19 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_19, 

CASE
    WHEN WTIREP20 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP20 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_20, 

CASE
    WHEN WTIREP21 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP21 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_21, 

CASE
    WHEN WTIREP22 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP22 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_22, 

CASE
    WHEN WTIREP23 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP23 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_23, 

CASE
    WHEN WTIREP24 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP24 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_24, 

CASE
    WHEN WTIREP25 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP25 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_25, 

CASE
    WHEN WTIREP26 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP26 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_26, 

CASE
    WHEN WTIREP27 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP27 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_27, 

CASE
    WHEN WTIREP28 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP28 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_28, 

CASE
    WHEN WTIREP29 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP29 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_29, 

CASE
    WHEN WTIREP30 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP30 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_30, 

CASE
    WHEN WTIREP31 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP31 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_31, 

CASE
    WHEN WTIREP32 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP32 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_32, 

CASE
    WHEN WTIREP33 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP33 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_33, 

CASE
    WHEN WTIREP34 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP34 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_34, 

CASE
    WHEN WTIREP35 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP35 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_35, 

CASE
    WHEN WTIREP36 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP36 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_36, 

CASE
    WHEN WTIREP37 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP37 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_37, 

CASE
    WHEN WTIREP38 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP38 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_38, 

CASE
    WHEN WTIREP39 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP39 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_39, 

CASE
    WHEN WTIREP40 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP40 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_40, 

CASE
    WHEN WTIREP41 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP41 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_41, 

CASE
    WHEN WTIREP42 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP42 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_42, 

CASE
    WHEN WTIREP43 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP43 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_43, 

CASE
    WHEN WTIREP44 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP44 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_44, 

CASE
    WHEN WTIREP45 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP45 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_45, 

CASE
    WHEN WTIREP46 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP46 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_46, 

CASE
    WHEN WTIREP47 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP47 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_47, 

CASE
    WHEN WTIREP48 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP48 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_48, 

CASE
    WHEN WTIREP49 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP49 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_49, 

CASE
    WHEN WTIREP50 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP50 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_50, 

CASE
    WHEN WTIREP51 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP51 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_51, 

CASE
    WHEN WTIREP52 IS NULL THEN NULL 
ELSE SAFE_CAST(WTIREP52 AS FLOAT64) 
 END as interview_weight_jack_knife_replicate_52, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_demographic_variables_sample_weights_demographics') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2011-2012/DEMO_G.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2009-2010/DEMO_F.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/DEMO_E.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/DEMO_D.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/DEMO_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/DEMO_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/DEMO.htm
*/
