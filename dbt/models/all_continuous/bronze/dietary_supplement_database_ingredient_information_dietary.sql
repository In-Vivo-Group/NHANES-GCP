SELECT
CASE
    WHEN DSDPID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDPID AS FLOAT64) 
 END as supplement_id_number, 

CASE
    WHEN REPLACE(DSDSUPP,'.0','') = 'SUPPLEMENT NAME' THEN 'Value was recorded' -- categorize string values 
WHEN DSDSUPP IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSUPP AS STRING) 
 END as supplement_name, 

CASE
    WHEN DSDIID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDIID AS FLOAT64) 
 END as ingredient_id_number, 

CASE
    WHEN REPLACE(DSDINGR,'.0','') = 'INGREDIENT NAME' THEN 'Value was recorded' -- categorize string values 
WHEN DSDINGR IS NULL THEN NULL 
ELSE SAFE_CAST(DSDINGR AS STRING) 
 END as ingredient_name, 

CASE
    WHEN REPLACE(DSDOPER,'.0','') = 'INGREDIENT OPERATOR' THEN 'Value was recorded' -- categorize string values 
WHEN DSDOPER IS NULL THEN NULL 
ELSE SAFE_CAST(DSDOPER AS STRING) 
 END as ingredient_operator, 

CASE
    WHEN DSDQTY IS NULL THEN NULL 
ELSE SAFE_CAST(DSDQTY AS FLOAT64) 
 END as ingredient_quantity, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'mg' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'IU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'mcg' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'gm' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'mL' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'kcal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'DU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'HUT' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'LU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(11 AS FLOAT64),0) AS INT64) THEN 'CU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'endo-PGO' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(13 AS FLOAT64),0) AS INT64) THEN 'AGU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(14 AS FLOAT64),0) AS INT64) THEN 'PPM' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(15 AS FLOAT64),0) AS INT64) THEN 'Million' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(16 AS FLOAT64),0) AS INT64) THEN 'Billion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(17 AS FLOAT64),0) AS INT64) THEN 'LacU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(18 AS FLOAT64),0) AS INT64) THEN 'X' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(19 AS FLOAT64),0) AS INT64) THEN 'PPB' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(20 AS FLOAT64),0) AS INT64) THEN 'Trace' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(21 AS FLOAT64),0) AS INT64) THEN 'Unknown' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(22 AS FLOAT64),0) AS INT64) THEN 'PU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(23 AS FLOAT64),0) AS INT64) THEN 'SEU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(24 AS FLOAT64),0) AS INT64) THEN 'InvU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN 'Â°DP' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(26 AS FLOAT64),0) AS INT64) THEN 'HCU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(27 AS FLOAT64),0) AS INT64) THEN 'CFU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(28 AS FLOAT64),0) AS INT64) THEN 'GALU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(29 AS FLOAT64),0) AS INT64) THEN 'ALU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN 'FTU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(31 AS FLOAT64),0) AS INT64) THEN 'NG' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(32 AS FLOAT64),0) AS INT64) THEN 'mcg DFE' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(33 AS FLOAT64),0) AS INT64) THEN 'mcg RAE' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(34 AS FLOAT64),0) AS INT64) THEN 'mg NE' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(35 AS FLOAT64),0) AS INT64) THEN 'SAPU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(36 AS FLOAT64),0) AS INT64) THEN 'SU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(37 AS FLOAT64),0) AS INT64) THEN 'FIP' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(38 AS FLOAT64),0) AS INT64) THEN 'GDU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(39 AS FLOAT64),0) AS INT64) THEN 'SKB' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN 'UNIT' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(41 AS FLOAT64),0) AS INT64) THEN 'ENDO-PG' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(42 AS FLOAT64),0) AS INT64) THEN 'BAU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(43 AS FLOAT64),0) AS INT64) THEN 'HSU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(44 AS FLOAT64),0) AS INT64) THEN 'BGU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(45 AS FLOAT64),0) AS INT64) THEN 'AGSU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(46 AS FLOAT64),0) AS INT64) THEN 'PC' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(47 AS FLOAT64),0) AS INT64) THEN 'SPU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(48 AS FLOAT64),0) AS INT64) THEN 'XU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(49 AS FLOAT64),0) AS INT64) THEN 'ENDO-PGU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(50 AS FLOAT64),0) AS INT64) THEN 'DPPU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(51 AS FLOAT64),0) AS INT64) THEN 'PGU' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(52 AS FLOAT64),0) AS INT64) THEN 'DPPIV' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDUNIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(53 AS FLOAT64),0) AS INT64) THEN 'APU' -- categorize numeric values
WHEN DSDUNIT IS NULL THEN NULL 
ELSE SAFE_CAST(DSDUNIT AS STRING) 
 END as ingredient_unit, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDCAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Vitamin' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDCAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Mineral' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDCAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Botanical' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDCAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDCAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Amino acid' -- categorize numeric values
WHEN DSDCAT IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCAT AS STRING) 
 END as ingredient_category, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDBLFLG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Ingredient is a blend' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDBLFLG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Ingredient is not a blend' -- categorize numeric values
WHEN DSDBLFLG IS NULL THEN NULL 
ELSE SAFE_CAST(DSDBLFLG AS STRING) 
 END as blend_flag, 

CASE
    WHEN REPLACE(DSDINGID,'.0','') = 'INGREDIENT ID NUMBER - OLD VERSION' THEN 'Value was recorded' -- categorize string values 
WHEN DSDINGID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDINGID AS STRING) 
 END as ingredient_id_number_old_version, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dietary_supplement_database_ingredient_information_dietary') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/DSII.htm
*/
