SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Complete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Partial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN OPASCST1 IS NULL THEN NULL 
ELSE SAFE_CAST(OPASCST1 AS STRING) 
 END as fdt_exam_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Safety exclusion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'SP refusal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'No time' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Physical limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Communication problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Equipment failure' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'SP ill/emergency' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'Eye specific limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(14 AS FLOAT64),0) AS INT64) THEN 'Interrupted' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN 'Unable to follow protocol' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(56 AS FLOAT64),0) AS INT64) THEN 'Came late/left early' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(72 AS FLOAT64),0) AS INT64) THEN 'Error (technician/software/supply)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(84 AS FLOAT64),0) AS INT64) THEN 'SP with child' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(86 AS FLOAT64),0) AS INT64) THEN 'SP Blind' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Other, specify' -- categorize numeric values
WHEN OPASCCT1 IS NULL THEN NULL 
ELSE SAFE_CAST(OPASCCT1 AS STRING) 
 END as fdt_exam_status_comment, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ110 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ110 AS STRING) 
 END as sp_has_severe_eye_infection, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both' -- categorize numeric values
WHEN VIQ121 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ121 AS STRING) 
 END as if_so_which_eye, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ130 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ130 AS STRING) 
 END as sp_wearing_eye_patch, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDODFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Not Done' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDODFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Normal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDODFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDODFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Insufficient' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDODFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Unreliable' -- categorize numeric values
WHEN OPDODFDT IS NULL THEN NULL 
ELSE SAFE_CAST(OPDODFDT AS STRING) 
 END as final_fdt_right_eye_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDOSFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Not Done' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDOSFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Normal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDOSFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Positive' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDOSFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Insufficient' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPDOSFDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Unreliable' -- categorize numeric values
WHEN OPDOSFDT IS NULL THEN NULL 
ELSE SAFE_CAST(OPDOSFDT AS STRING) 
 END as final_fdt_left_eye_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX1ODBS IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1ODBS AS STRING) 
 END as response_to_bs_stimulus_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX1ODFP IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1ODFP AS STRING) 
 END as response_to_fp_stimulus_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'No noted lack of fixation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1ODTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Technician noted lack of fixation' -- categorize numeric values
WHEN OPX1ODTN IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1ODTN AS STRING) 
 END as no_fixation_per_tech_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD02 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD02 AS STRING) 
 END as ct_result_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD03 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD03 AS STRING) 
 END as t6_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD04 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD04 AS STRING) 
 END as t2_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD05 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD05 AS STRING) 
 END as t5_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD06 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD06 AS STRING) 
 END as t1_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD07 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD07 AS STRING) 
 END as n2_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD08 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD08 AS STRING) 
 END as n6_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD09 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD09 AS STRING) 
 END as n1_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD10 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD10 AS STRING) 
 END as n5_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD11 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD11 AS STRING) 
 END as n3_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD12 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD12 AS STRING) 
 END as n7_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD13 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD13 AS STRING) 
 END as n4_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD14 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD14 AS STRING) 
 END as n8_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD15 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD15 AS STRING) 
 END as t7_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD16 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD16 AS STRING) 
 END as t3_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD17 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD17 AS STRING) 
 END as t8_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD18 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD18 AS STRING) 
 END as t4_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD19 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD19 AS STRING) 
 END as ns_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OD20 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OD20 AS STRING) 
 END as ni_results_right_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX1OSBS IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OSBS AS STRING) 
 END as response_to_bs_stimulus_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX1OSFP IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OSFP AS STRING) 
 END as response_to_fp_stimulus_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'No noted lack of fixation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OSTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Technician noted lack of fixation' -- categorize numeric values
WHEN OPX1OSTN IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OSTN AS STRING) 
 END as no_fixation_per_tech_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS00 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS00 AS STRING) 
 END as ns_result_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS01 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS01 AS STRING) 
 END as ni_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS02 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS02 AS STRING) 
 END as ct_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS03 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS03 AS STRING) 
 END as n2_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS04 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS04 AS STRING) 
 END as n6_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS05 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS05 AS STRING) 
 END as n1_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS06 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS06 AS STRING) 
 END as n5_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS07 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS07 AS STRING) 
 END as t6_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS08 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS08 AS STRING) 
 END as t2_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS09 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS09 AS STRING) 
 END as t5_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS10 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS10 AS STRING) 
 END as t1_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS11 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS11 AS STRING) 
 END as t7_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS12 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS12 AS STRING) 
 END as t3_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS13 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS13 AS STRING) 
 END as t8_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS14 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS14 AS STRING) 
 END as t4_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS15 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS15 AS STRING) 
 END as n3_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS16 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS16 AS STRING) 
 END as n7_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS17 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS17 AS STRING) 
 END as n4_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX1OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX1OS18 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX1OS18 AS STRING) 
 END as n8_results_left_test_1, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX2ODBS IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2ODBS AS STRING) 
 END as response_to_bs_stimulus_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX2ODFP IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2ODFP AS STRING) 
 END as response_to_fp_stimulus_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'No noted lack of fixation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2ODTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Technician noted lack of fixation' -- categorize numeric values
WHEN OPX2ODTN IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2ODTN AS STRING) 
 END as no_fixation_per_tech_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD02 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD02 AS STRING) 
 END as ct_result_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD03 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD03 AS STRING) 
 END as t6_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD04 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD04 AS STRING) 
 END as t2_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD05 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD05 AS STRING) 
 END as t5_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD06 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD06 AS STRING) 
 END as t1_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD07 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD07 AS STRING) 
 END as n2_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD08 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD08 AS STRING) 
 END as n6_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD09 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD09 AS STRING) 
 END as n1_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD10 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD10 AS STRING) 
 END as n5_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD11 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD11 AS STRING) 
 END as n3_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD12 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD12 AS STRING) 
 END as n7_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD13 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD13 AS STRING) 
 END as n4_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD14 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD14 AS STRING) 
 END as n8_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD15 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD15 AS STRING) 
 END as t7_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD16 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD16 AS STRING) 
 END as t3_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD17 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD17 AS STRING) 
 END as t8_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD18 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD18 AS STRING) 
 END as t4_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD19 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD19 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD19 AS STRING) 
 END as ns_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OD20 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OD20 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OD20 AS STRING) 
 END as ni_results_right_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSBS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX2OSBS IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OSBS AS STRING) 
 END as response_to_bs_stimulus_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Test not performed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '0/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '1/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '2/3' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSFP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '3/3' -- categorize numeric values
WHEN OPX2OSFP IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OSFP AS STRING) 
 END as response_to_fp_stimulus_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'No noted lack of fixation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OSTN AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Technician noted lack of fixation' -- categorize numeric values
WHEN OPX2OSTN IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OSTN AS STRING) 
 END as no_fixation_per_tech_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS00 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS00 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS00 AS STRING) 
 END as ns_result_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS01 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS01 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS01 AS STRING) 
 END as ni_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS02 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS02 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS02 AS STRING) 
 END as ct_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS03 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS03 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS03 AS STRING) 
 END as n2_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS04 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS04 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS04 AS STRING) 
 END as n6_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS05 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS05 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS05 AS STRING) 
 END as n1_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS06 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS06 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS06 AS STRING) 
 END as n5_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS07 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS07 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS07 AS STRING) 
 END as t6_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS08 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS08 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS08 AS STRING) 
 END as t2_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS09 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS09 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS09 AS STRING) 
 END as t5_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS10 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS10 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS10 AS STRING) 
 END as t1_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS11 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS11 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS11 AS STRING) 
 END as t7_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS12 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS12 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS12 AS STRING) 
 END as t3_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS13 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS13 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS13 AS STRING) 
 END as t8_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS14 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS14 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS14 AS STRING) 
 END as t4_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS15 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS15 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS15 AS STRING) 
 END as n3_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS16 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS16 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS16 AS STRING) 
 END as n7_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS17 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS17 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS17 AS STRING) 
 END as n4_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'None' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 1st presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'p >= 5% 2nd presentation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'p < 5%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'p < 2%' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(OPX2OS18 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'p < 1%' -- categorize numeric values
WHEN OPX2OS18 IS NULL THEN NULL 
ELSE SAFE_CAST(OPX2OS18 AS STRING) 
 END as n8_results_left_test_2, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both' -- categorize numeric values
WHEN VIQ141 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ141 AS STRING) 
 END as which_eye, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_ophthalmology_frequency_doubling_technology_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/OPXFDT_E.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/OPXFDT_D.htm
*/
