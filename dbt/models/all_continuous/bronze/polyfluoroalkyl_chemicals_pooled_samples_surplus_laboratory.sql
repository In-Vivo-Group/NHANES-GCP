SELECT
CASE
WHEN PFCANA IS NULL THEN NULL 
ELSE SAFE_CAST(PFCANA AS FLOAT64) 
 END as analyte_abbreviated_name, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCRACE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'non-Hispanic white' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCRACE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'non-Hispanic black' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCRACE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Hispanic' -- categorize numeric values
WHEN PFCRACE IS NULL THEN NULL 
ELSE SAFE_CAST(PFCRACE AS STRING) 
 END as race, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'male' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'female' -- categorize numeric values
WHEN PFCGENDR IS NULL THEN NULL 
ELSE SAFE_CAST(PFCGENDR AS STRING) 
 END as gender, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCAGE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '3-5 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCAGE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN '6-11 years' -- categorize numeric values
WHEN PFCAGE IS NULL THEN NULL 
ELSE SAFE_CAST(PFCAGE AS STRING) 
 END as age, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCPOOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Pool #1' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCPOOL AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Pool #2' -- categorize numeric values
WHEN PFCPOOL IS NULL THEN NULL 
ELSE SAFE_CAST(PFCPOOL AS STRING) 
 END as pool_number, 

CASE
WHEN PFCAMNT IS NULL THEN NULL 
ELSE SAFE_CAST(PFCAMNT AS FLOAT64) 
 END as amount_ng_ml, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'at or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PFCCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below the detection limit' -- categorize numeric values
WHEN PFCCMT IS NULL THEN NULL 
ELSE SAFE_CAST(PFCCMT AS STRING) 
 END as comment_code, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_polyfluoroalkyl_chemicals_pooled_samples_surplus_laboratory') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/PFC_POOL.htm
*/
