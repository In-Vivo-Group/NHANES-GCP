SELECT
CASE
    WHEN SAMPLEID IS NULL THEN NULL 
ELSE SAFE_CAST(SAMPLEID AS FLOAT64) 
 END as pool_identification_number, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Male' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Female' -- categorize numeric values
WHEN RIAGENDR IS NULL THEN NULL 
ELSE SAFE_CAST(RIAGENDR AS STRING) 
 END as gender, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(ETHNICTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic White' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ETHNICTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic Black' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ETHNICTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Mexican American' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ETHNICTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Other Hispanic & Non-Hispanic Multi-Racial' -- categorize numeric values
WHEN ETHNICTY IS NULL THEN NULL 
ELSE SAFE_CAST(ETHNICTY AS STRING) 
 END as ethnicity_recode, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '12-19' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '20-39' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '40-59' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '60+' -- categorize numeric values
WHEN RIDAGGRP IS NULL THEN NULL 
ELSE SAFE_CAST(RIDAGGRP AS STRING) 
 END as age_at_screening_adjudicated_recode, 

CASE
    WHEN RIANSMP IS NULL THEN NULL 
ELSE SAFE_CAST(RIANSMP AS FLOAT64) 
 END as number_of_samples_in_a_pool, 

CASE
    WHEN WTSMSMPA IS NULL THEN NULL 
ELSE SAFE_CAST(WTSMSMPA AS FLOAT64) 
 END as adjust_sum_sampling_weights_in_same_pool, 

CASE
    WHEN LBCD01 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD01 AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdd_fg_g, 

CASE
    WHEN LBCD02 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD02 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdd_fg_g, 

CASE
    WHEN LBCD03 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD03 AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdd_fg_g, 

CASE
    WHEN LBCD04 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD04 AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdd_fg_g, 

CASE
    WHEN LBCD05 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD05 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdd_fg_g, 

CASE
    WHEN LBCD07 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD07 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_fg_g, 

CASE
    WHEN LBCF01 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF01 AS FLOAT64) 
 END as lab_2_3_7_8_tetrachlorofuran_tcdf_fg_g, 

CASE
    WHEN LBCF02 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF02 AS FLOAT64) 
 END as lab_1_2_3_7_8_pentachlorofuran_pncdf_fg_g, 

CASE
    WHEN LBCF03 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF03 AS FLOAT64) 
 END as lab_2_3_4_7_8_pentachlorofuran_pncdf_fg_g, 

CASE
    WHEN LBCF04 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF04 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hexachlorofuran_hcxdf_fg_g, 

CASE
    WHEN LBCF05 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF05 AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hexachlorofuran_hxcdf_fg_g, 

CASE
    WHEN LBCF06 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF06 AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hexachlorodifuran_fg_g, 

CASE
    WHEN LBCF07 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF07 AS FLOAT64) 
 END as lab_2_3_4_6_7_8_hexchlorofuran_hxcdf_fg_g, 

CASE
    WHEN LBCF08 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF08 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_heptachlorodifuran_fg_g, 

CASE
    WHEN LBCF09 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF09 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_9_heptachlorodifuran_fg_g, 

CASE
    WHEN LBCF10 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF10 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_octachlorodifuran_fg_g, 

CASE
    WHEN LBCHXC IS NULL THEN NULL 
ELSE SAFE_CAST(LBCHXC AS FLOAT64) 
 END as lab_3_3_4_4_5_5_hexachlorobiphenyl_fg_g, 

CASE
    WHEN LBCPCB IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPCB AS FLOAT64) 
 END as lab_3_3_4_4_5_pentachlorobiphenyl_fg_g, 

CASE
    WHEN LBCTC2 IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTC2 AS FLOAT64) 
 END as lab_3_4_4_5_tetrachlorobiphenyl_tcb_fg_g, 

CASE
    WHEN LBCTCD IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTCD AS FLOAT64) 
 END as lab_2_3_7_8_tetrachloro_p_dioxn_tcdd_fg_g, 

CASE
    WHEN LBCD01LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD01LA AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCD02LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD02LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCD03LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD03LA AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCD04LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD04LA AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCD05LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD05LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCD07LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCD07LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF01LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF01LA AS FLOAT64) 
 END as lab_2_3_7_8_tcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF02LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF02LA AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF03LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF03LA AS FLOAT64) 
 END as lab_2_3_4_7_8_pncdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF04LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF04LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hcxdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF05LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF05LA AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF06LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF06LA AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF07LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF07LA AS FLOAT64) 
 END as lab_2_3_4_6_7_8_hxcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF08LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF08LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF09LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF09LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_9_hpcdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCF10LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCF10LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdf_lipid_adjusted_pg_g, 

CASE
    WHEN LBCHXCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCHXCLA AS FLOAT64) 
 END as lab_3_3_4_4_5_5_hxcb_lipid_adjusted_pg_g, 

CASE
    WHEN LBCPCBLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPCBLA AS FLOAT64) 
 END as lab_3_3_4_4_5_pncb_lipid_adjusted_pg_g, 

CASE
    WHEN LBCTC2LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTC2LA AS FLOAT64) 
 END as lab_3_4_4_5_tcb_lipid_adjusted_pg_g, 

CASE
    WHEN LBCTCDLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTCDLA AS FLOAT64) 
 END as lab_2_3_7_8_tcdd_lipid_adjusted_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD01LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD01LC AS STRING) 
 END as lab_1_2_3_7_8_pncdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD02LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD02LC AS STRING) 
 END as lab_1_2_3_4_7_8_hxcdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD03LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD03LC AS STRING) 
 END as lab_1_2_3_6_7_8_hxcdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD04LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD04LC AS STRING) 
 END as lab_1_2_3_7_8_9_hxcdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD05LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD05LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_hpcdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDD07LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD07LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF01LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF01LC AS STRING) 
 END as lab_2_3_7_8_tcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF02LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF02LC AS STRING) 
 END as lab_1_2_3_7_8_pncdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF03LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF03LC AS STRING) 
 END as lab_2_3_4_7_8_pncdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF04LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF04LC AS STRING) 
 END as lab_1_2_3_4_7_8_hcxdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF05LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF05LC AS STRING) 
 END as lab_1_2_3_6_7_8_hxcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF06LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF06LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF06LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF06LC AS STRING) 
 END as lab_1_2_3_7_8_9_hxcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF07LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF07LC AS STRING) 
 END as lab_2_3_4_6_7_8_hxcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF08LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF08LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF08LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF08LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_hpcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF09LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF09LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF09LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF09LC AS STRING) 
 END as lab_1_2_3_4_7_8_9_hpcdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF10LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF10LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDF10LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF10LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_9_ocdf_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHXCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHXCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDHXCLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDHXCLC AS STRING) 
 END as lab_3_3_4_4_5_5_hxcb_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDPCBLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPCBLC AS STRING) 
 END as lab_3_3_4_4_5_pncb_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTC2LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTC2LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDTC2LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTC2LC AS STRING) 
 END as lab_3_4_4_5_tcb_comment_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTCDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTCDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDTCDLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTCDLC AS STRING) 
 END as lab_2_3_7_8_tcdd_comment_code, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_polychlorinated_dibenzo_p_dioxins_pcdds_dibenzofurans_pcdfs_coplanar_polychlorinated_biphenyls_cpcbs_pooled_samples_laboratory') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/DOXPOL_D.htm
*/
