SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN WTSC2YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTSC2YR AS FLOAT64) 
 END as two_year_mec_weights_of_subsample_c, 

CASE
    WHEN LBX028 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX028 AS FLOAT64) 
 END as pcb28_ng_g, 

CASE
    WHEN LBX028LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX028LA AS FLOAT64) 
 END as pcb28_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD028LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD028LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD028LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD028LC AS STRING) 
 END as pcb28_comment_code, 

CASE
    WHEN LBX066 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX066 AS FLOAT64) 
 END as pcb66_ng_g, 

CASE
    WHEN LBX066LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX066LA AS FLOAT64) 
 END as pcb66_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD066LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD066LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD066LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD066LC AS STRING) 
 END as pcb66_comment_code, 

CASE
    WHEN LBX074 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX074 AS FLOAT64) 
 END as pcb74_ng_g, 

CASE
    WHEN LBX074LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX074LA AS FLOAT64) 
 END as pcb74_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD074LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD074LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD074LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD074LC AS STRING) 
 END as pcb74_comment_code, 

CASE
    WHEN LBX105 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX105 AS FLOAT64) 
 END as pcb105_ng_g, 

CASE
    WHEN LBX105LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX105LA AS FLOAT64) 
 END as pcb105_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD105LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD105LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD105LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD105LC AS STRING) 
 END as pcb105_comment_code, 

CASE
    WHEN LBX118 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX118 AS FLOAT64) 
 END as pcb118_ng_g, 

CASE
    WHEN LBX118LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX118LA AS FLOAT64) 
 END as pcb118_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD118LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD118LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD118LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD118LC AS STRING) 
 END as pcb118_comment_code, 

CASE
    WHEN LBX156 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX156 AS FLOAT64) 
 END as pcb156_ng_g, 

CASE
    WHEN LBX156LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX156LA AS FLOAT64) 
 END as pcb156_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD156LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD156LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD156LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD156LC AS STRING) 
 END as pcb156_comment_code, 

CASE
    WHEN LBX157 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX157 AS FLOAT64) 
 END as pcb157_ng_g, 

CASE
    WHEN LBX157LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX157LA AS FLOAT64) 
 END as pcb157_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD157LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD157LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD157LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD157LC AS STRING) 
 END as pcb157_comment_code, 

CASE
    WHEN LBX167 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX167 AS FLOAT64) 
 END as pcb167_ng_g, 

CASE
    WHEN LBX167LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX167LA AS FLOAT64) 
 END as pcb167_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD167LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD167LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD167LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD167LC AS STRING) 
 END as pcb167_comment_code, 

CASE
    WHEN LBX189 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX189 AS FLOAT64) 
 END as pcb189_ng_g, 

CASE
    WHEN LBX189LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX189LA AS FLOAT64) 
 END as pcb189_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD189LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD189LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD189LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD189LC AS STRING) 
 END as pcb189_comment_code, 

CASE
    WHEN LBXD01 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD01 AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdd_fg_g, 

CASE
    WHEN LBXD01LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD01LA AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD01LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD01LC AS STRING) 
 END as lab_1_2_3_7_8_pncdd_comment_code, 

CASE
    WHEN LBXD02 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD02 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdd_fg_g, 

CASE
    WHEN LBXD02LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD02LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD02LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD02LC AS STRING) 
 END as lab_1_2_3_4_7_8_hxcdd_comment_code, 

CASE
    WHEN LBXD03 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD03 AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdd_fg_g, 

CASE
    WHEN LBXD03LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD03LA AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD03LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD03LC AS STRING) 
 END as lab_1_2_3_6_7_8_hxcdd_comment_code, 

CASE
    WHEN LBXD04 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD04 AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdd_fg_g, 

CASE
    WHEN LBXD04LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD04LA AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD04LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD04LC AS STRING) 
 END as lab_1_2_3_7_8_9_hxcdd_comment_code, 

CASE
    WHEN LBXD05 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD05 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdd_fg_g, 

CASE
    WHEN LBXD05LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD05LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD05LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD05LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_hpcdd_comment_code, 

CASE
    WHEN LBXD07 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD07 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_fg_g, 

CASE
    WHEN LBXD07LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXD07LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDD07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDD07LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDD07LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_9_ocdd_comment_code, 

CASE
    WHEN LBXF01 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF01 AS FLOAT64) 
 END as lab_2_3_7_8_tcdf_fg_g, 

CASE
    WHEN LBXF01LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF01LA AS FLOAT64) 
 END as lab_2_3_7_8_tcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF01LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF01LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF01LC AS STRING) 
 END as lab_2_3_7_8_tcdf_comment_code, 

CASE
    WHEN LBXF02 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF02 AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdf_fg_g, 

CASE
    WHEN LBXF02LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF02LA AS FLOAT64) 
 END as lab_1_2_3_7_8_pncdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF02LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF02LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF02LC AS STRING) 
 END as lab_1_2_3_7_8_pncdf_comment_code, 

CASE
    WHEN LBXF03 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF03 AS FLOAT64) 
 END as lab_2_3_4_7_8_pncdf_fg_g, 

CASE
    WHEN LBXF03LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF03LA AS FLOAT64) 
 END as lab_2_3_4_7_8_pncdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF03LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF03LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF03LC AS STRING) 
 END as lab_2_3_4_7_8_pncdf_comment_code, 

CASE
    WHEN LBXF04 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF04 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdf_fg_g, 

CASE
    WHEN LBXF04LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF04LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_hxcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF04LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF04LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF04LC AS STRING) 
 END as lab_1_2_3_4_7_8_hxcdf_comment_code, 

CASE
    WHEN LBXF05 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF05 AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdf_fg_g, 

CASE
    WHEN LBXF05LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF05LA AS FLOAT64) 
 END as lab_1_2_3_6_7_8_hxcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF05LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF05LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF05LC AS STRING) 
 END as lab_1_2_3_6_7_8_hxcdf_comment_code, 

CASE
    WHEN LBXF06 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF06 AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdf_fg_g, 

CASE
    WHEN LBXF06LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF06LA AS FLOAT64) 
 END as lab_1_2_3_7_8_9_hxcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF06LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF06LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF06LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF06LC AS STRING) 
 END as lab_1_2_3_7_8_9_hxcdf_comment_code, 

CASE
    WHEN LBXF07 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF07 AS FLOAT64) 
 END as lab_2_3_4_6_7_8_hxcdf_fg_g, 

CASE
    WHEN LBXF07LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF07LA AS FLOAT64) 
 END as lab_2_3_4_6_7_8_hxcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF07LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF07LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF07LC AS STRING) 
 END as lab_2_3_4_6_7_8_hxcdf_comment_code, 

CASE
    WHEN LBXF08 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF08 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdf_fg_g, 

CASE
    WHEN LBXF08LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF08LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_hpcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF08LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF08LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF08LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF08LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_hpcdf_comment_code, 

CASE
    WHEN LBXF09 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF09 AS FLOAT64) 
 END as lab_1_2_3_4_7_8_9_hpcdf_fg_g, 

CASE
    WHEN LBXF09LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF09LA AS FLOAT64) 
 END as lab_1_2_3_4_7_8_9_hpcdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF09LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF09LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF09LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF09LC AS STRING) 
 END as lab_1_2_3_4_7_8_9_hpcdf_comment_code, 

CASE
    WHEN LBXF10 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF10 AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdf_fg_g, 

CASE
    WHEN LBXF10LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXF10LA AS FLOAT64) 
 END as lab_1_2_3_4_6_7_8_9_ocdf_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF10LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDF10LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDF10LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDF10LC AS STRING) 
 END as lab_1_2_3_4_6_7_8_9_ocdf_comment_code, 

CASE
    WHEN LBXPCB IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPCB AS FLOAT64) 
 END as lab_3_3_4_4_5_pncb_fg_g, 

CASE
    WHEN LBXPCBLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPCBLA AS FLOAT64) 
 END as lab_3_3_4_4_5_pncb_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDPCBLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPCBLC AS STRING) 
 END as lab_3_3_4_4_5_pncb_comment_code, 

CASE
    WHEN LBXTC2 IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTC2 AS FLOAT64) 
 END as lab_3_4_4_5_tcb_fg_g, 

CASE
    WHEN LBXTC2LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTC2LA AS FLOAT64) 
 END as lab_3_4_4_5_tcb_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTC2LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTC2LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDTC2LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTC2LC AS STRING) 
 END as lab_3_4_4_5_tcb_comment_code, 

CASE
    WHEN LBXHXC IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHXC AS FLOAT64) 
 END as lab_3_3_4_4_5_5_hxcb_fg_g, 

CASE
    WHEN LBXHXCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHXCLA AS FLOAT64) 
 END as lab_3_3_4_4_5_5_hxcb_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHXCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHXCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDHXCLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDHXCLC AS STRING) 
 END as lab_3_3_4_4_5_5_hxcb_comment_code, 

CASE
    WHEN LBXTCD IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTCD AS FLOAT64) 
 END as lab_2_3_7_8_tcdd_fg_g, 

CASE
    WHEN LBXTCDLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTCDLA AS FLOAT64) 
 END as lab_2_3_7_8_tcdd_lipid_adj_pg_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTCDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTCDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDTCDLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTCDLC AS STRING) 
 END as lab_2_3_7_8_tcdd_comment_code, 

CASE
    WHEN WTSPO2YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO2YR AS FLOAT64) 
 END as dioxins_subsample_2_year_mec_weight, 

CASE
    WHEN WTSPO4YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO4YR AS FLOAT64) 
 END as dioxins_subsample_4_year_mec_weight, 

CASE
    WHEN LBX052 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX052 AS FLOAT64) 
 END as pcb52_ng_g, 

CASE
    WHEN LBX052LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX052LA AS FLOAT64) 
 END as pcb52_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD052LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD052LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD052LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD052LC AS STRING) 
 END as pcb52_comment_code, 

CASE
    WHEN LBX087 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX087 AS FLOAT64) 
 END as pcb87_ng_g, 

CASE
    WHEN LBX087LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX087LA AS FLOAT64) 
 END as pcb87_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD087LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD087LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD087LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD087LC AS STRING) 
 END as pcb87_comment_code, 

CASE
    WHEN LBX099 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX099 AS FLOAT64) 
 END as pcb99_ng_g, 

CASE
    WHEN LBX099LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX099LA AS FLOAT64) 
 END as pcb99_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD099LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD099LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD099LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD099LC AS STRING) 
 END as pcb99_comment_code, 

CASE
    WHEN LBX101 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX101 AS FLOAT64) 
 END as pcb101_ng_g, 

CASE
    WHEN LBX101LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX101LA AS FLOAT64) 
 END as pcb101_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD101LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD101LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD101LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD101LC AS STRING) 
 END as pcb101_comment_code, 

CASE
    WHEN LBX110 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX110 AS FLOAT64) 
 END as pcb110_ng_g, 

CASE
    WHEN LBX110LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX110LA AS FLOAT64) 
 END as pcb110_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD110LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD110LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD110LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD110LC AS STRING) 
 END as pcb110_comment_code, 

CASE
    WHEN LBX128 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX128 AS FLOAT64) 
 END as pcb128_ng_g, 

CASE
    WHEN LBX128LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX128LA AS FLOAT64) 
 END as pcb128_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD128LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD128LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD128LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD128LC AS STRING) 
 END as pcb128_comment_code, 

CASE
    WHEN LBX138 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX138 AS FLOAT64) 
 END as pcb138_ng_g, 

CASE
    WHEN LBX138LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX138LA AS FLOAT64) 
 END as pcb138_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD138LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD138LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD138LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD138LC AS STRING) 
 END as pcb138_comment_code, 

CASE
    WHEN LBX146 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX146 AS FLOAT64) 
 END as pcb146_ng_g, 

CASE
    WHEN LBX146LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX146LA AS FLOAT64) 
 END as pcb146_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD146LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD146LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD146LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD146LC AS STRING) 
 END as pcb146_comment_code, 

CASE
    WHEN LBX149 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX149 AS FLOAT64) 
 END as pcb149_ng_g, 

CASE
    WHEN LBX149LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX149LA AS FLOAT64) 
 END as pcb149_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD149LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD149LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD149LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD149LC AS STRING) 
 END as pcb149_comment_code, 

CASE
    WHEN LBX151 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX151 AS FLOAT64) 
 END as pcb151_ng_g, 

CASE
    WHEN LBX151LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX151LA AS FLOAT64) 
 END as pcb151_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD151LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD151LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD151LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD151LC AS STRING) 
 END as pcb151_comment_code, 

CASE
    WHEN LBX153 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX153 AS FLOAT64) 
 END as pcb153_ng_g, 

CASE
    WHEN LBX153LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX153LA AS FLOAT64) 
 END as pcb153_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD153LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD153LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD153LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD153LC AS STRING) 
 END as pcb153_comment_code, 

CASE
    WHEN LBX170 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX170 AS FLOAT64) 
 END as pcb170_ng_g, 

CASE
    WHEN LBX170LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX170LA AS FLOAT64) 
 END as pcb170_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD170LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD170LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD170LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD170LC AS STRING) 
 END as pcb170_comment_code, 

CASE
    WHEN LBX172 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX172 AS FLOAT64) 
 END as pcb172_ng_g, 

CASE
    WHEN LBX172LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX172LA AS FLOAT64) 
 END as pcb172_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD172LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD172LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD172LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD172LC AS STRING) 
 END as pcb172_comment_code, 

CASE
    WHEN LBX177 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX177 AS FLOAT64) 
 END as pcb177_ng_g, 

CASE
    WHEN LBX177LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX177LA AS FLOAT64) 
 END as pcb177_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD177LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD177LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD177LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD177LC AS STRING) 
 END as pcb177_comment_code, 

CASE
    WHEN LBX178 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX178 AS FLOAT64) 
 END as pcb178_ng_g, 

CASE
    WHEN LBX178LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX178LA AS FLOAT64) 
 END as pcb178_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD178LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD178LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD178LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD178LC AS STRING) 
 END as pcb178_comment_code, 

CASE
    WHEN LBX180 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX180 AS FLOAT64) 
 END as pcb180_ng_g, 

CASE
    WHEN LBX180LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX180LA AS FLOAT64) 
 END as pcb180_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD180LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD180LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD180LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD180LC AS STRING) 
 END as pcb180_comment_code, 

CASE
    WHEN LBX183 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX183 AS FLOAT64) 
 END as pcb183_ng_g, 

CASE
    WHEN LBX183LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX183LA AS FLOAT64) 
 END as pcb183_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD183LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD183LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD183LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD183LC AS STRING) 
 END as pcb183_comment_code, 

CASE
    WHEN LBX187 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX187 AS FLOAT64) 
 END as pcb187_ng_g, 

CASE
    WHEN LBX187LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX187LA AS FLOAT64) 
 END as pcb187_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD187LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD187LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD187LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD187LC AS STRING) 
 END as pcb187_comment_code, 

CASE
    WHEN LBX194 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX194 AS FLOAT64) 
 END as pcb194_ng_g, 

CASE
    WHEN LBX194LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX194LA AS FLOAT64) 
 END as pcb194_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD194LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD194LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD194LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD194LC AS STRING) 
 END as pcb194_comment_code, 

CASE
    WHEN LBX195 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX195 AS FLOAT64) 
 END as pcb195_ng_g, 

CASE
    WHEN LBX195LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX195LA AS FLOAT64) 
 END as pcb195_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD195LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD195LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD195LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD195LC AS STRING) 
 END as pcb195_comment_code, 

CASE
    WHEN LBX196 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX196 AS FLOAT64) 
 END as pcb196_ng_g, 

CASE
    WHEN LBX196LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX196LA AS FLOAT64) 
 END as pcb196_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD196LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD196LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD196LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD196LC AS STRING) 
 END as pcb196_comment_code, 

CASE
    WHEN LBD199 IS NULL THEN NULL 
ELSE SAFE_CAST(LBD199 AS FLOAT64) 
 END as pcb199_ng_g, 

CASE
    WHEN LBX199LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX199LA AS FLOAT64) 
 END as pcb199_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD199LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD199LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD199LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD199LC AS STRING) 
 END as pcb199_comment_code, 

CASE
    WHEN LBX206 IS NULL THEN NULL 
ELSE SAFE_CAST(LBX206 AS FLOAT64) 
 END as pcb206_ng_g, 

CASE
    WHEN LBX206LA IS NULL THEN NULL 
ELSE SAFE_CAST(LBX206LA AS FLOAT64) 
 END as pcb206_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD206LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBD206LC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBD206LC IS NULL THEN NULL 
ELSE SAFE_CAST(LBD206LC AS STRING) 
 END as pcb206_comment_code, 

CASE
    WHEN LBXBHC IS NULL THEN NULL 
ELSE SAFE_CAST(LBXBHC AS FLOAT64) 
 END as beta_hexachlorocyclohexane_ng_g, 

CASE
    WHEN LBXBHCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXBHCLA AS FLOAT64) 
 END as b_hexachlorocyclohexane_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDBHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDBHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDBHCLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDBHCLC AS STRING) 
 END as beta_hexachlorocyclohexane_comment_code, 

CASE
    WHEN LBXGHC IS NULL THEN NULL 
ELSE SAFE_CAST(LBXGHC AS FLOAT64) 
 END as gamma_hexachlorocyclohexane_ng_g, 

CASE
    WHEN LBXGHCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXGHCLA AS FLOAT64) 
 END as g_hexachlorocyclohexane_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDGHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDGHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDGHCLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDGHCLC AS STRING) 
 END as gamma_hexachlorocyclohexane_comment_code, 

CASE
    WHEN LBXHCB IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHCB AS FLOAT64) 
 END as hexachlorobenzene_ng_g, 

CASE
    WHEN LBXHCBLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHCBLA AS FLOAT64) 
 END as hexachlorobenzene_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDHCBLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDHCBLC AS STRING) 
 END as hexachlorobenzene_comment_code, 

CASE
    WHEN LBXHPE IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHPE AS FLOAT64) 
 END as heptachlor_epoxide_ng_g, 

CASE
    WHEN LBXHPELA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXHPELA AS FLOAT64) 
 END as heptachlor_epoxide_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHPELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHPELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDHPELC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDHPELC AS STRING) 
 END as heptachlor_epoxide_comment_code, 

CASE
    WHEN LBXMIR IS NULL THEN NULL 
ELSE SAFE_CAST(LBXMIR AS FLOAT64) 
 END as mirex_ng_g, 

CASE
    WHEN LBXMIRLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXMIRLA AS FLOAT64) 
 END as mirex_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDMIRLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDMIRLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDMIRLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDMIRLC AS STRING) 
 END as mirex_comment_code, 

CASE
    WHEN LBXODT IS NULL THEN NULL 
ELSE SAFE_CAST(LBXODT AS FLOAT64) 
 END as o_p_ddt_ng_g, 

CASE
    WHEN LBXODTLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXODTLA AS FLOAT64) 
 END as o_p_ddt_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDODTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDODTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDODTLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDODTLC AS STRING) 
 END as o_p_ddt_comment_code, 

CASE
    WHEN LBXOXY IS NULL THEN NULL 
ELSE SAFE_CAST(LBXOXY AS FLOAT64) 
 END as oxychlordane_ng_g, 

CASE
    WHEN LBXOXYLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXOXYLA AS FLOAT64) 
 END as oxychlordane_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDOXYLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDOXYLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDOXYLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDOXYLC AS STRING) 
 END as oxychlordane_comment_code, 

CASE
    WHEN LBXPDE IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPDE AS FLOAT64) 
 END as p_p_dde_ng_g, 

CASE
    WHEN LBXPDELA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPDELA AS FLOAT64) 
 END as p_p_dde_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDPDELC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPDELC AS STRING) 
 END as p_p_dde_comment_code, 

CASE
    WHEN LBXPDT IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPDT AS FLOAT64) 
 END as p_p_ddt_ng_g, 

CASE
    WHEN LBXPDTLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXPDTLA AS FLOAT64) 
 END as p_p_ddt_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDPDTLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPDTLC AS STRING) 
 END as p_p_ddt_comment_code, 

CASE
    WHEN LBXTNA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTNA AS FLOAT64) 
 END as trans_nonachlor_ng_g, 

CASE
    WHEN LBXTNALA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXTNALA AS FLOAT64) 
 END as trans_nonachlor_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTNALC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTNALC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDTNALC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTNALC AS STRING) 
 END as trans_nonachlor_comment_code, 

CASE
    WHEN LBXDIE IS NULL THEN NULL 
ELSE SAFE_CAST(LBXDIE AS FLOAT64) 
 END as dieldrin_ng_g, 

CASE
    WHEN LBXDIELA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXDIELA AS FLOAT64) 
 END as dieldrin_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDDIELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDDIELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDDIELC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDDIELC AS STRING) 
 END as dieldrin_comment_code, 

CASE
    WHEN LBXALD IS NULL THEN NULL 
ELSE SAFE_CAST(LBXALD AS FLOAT64) 
 END as aldrin_ng_g, 

CASE
    WHEN LBXALDLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXALDLA AS FLOAT64) 
 END as aldrin_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDALDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDALDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDALDLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDALDLC AS STRING) 
 END as aldrin_comment_code, 

CASE
    WHEN LBXEND IS NULL THEN NULL 
ELSE SAFE_CAST(LBXEND AS FLOAT64) 
 END as endrin_ng_g, 

CASE
    WHEN LBXENDLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBXENDLA AS FLOAT64) 
 END as endrin_lipid_adj_ng_g, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDENDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'detectable result' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDENDLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'below detectable limit' -- categorize numeric values
WHEN LBDENDLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDENDLC AS STRING) 
 END as endrin_comment_code, 

CASE
    WHEN WTSPO01 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO01 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_01, 

CASE
    WHEN WTSPO02 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO02 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_02, 

CASE
    WHEN WTSPO03 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO03 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_03, 

CASE
    WHEN WTSPO04 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO04 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_04, 

CASE
    WHEN WTSPO05 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO05 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_05, 

CASE
    WHEN WTSPO06 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO06 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_06, 

CASE
    WHEN WTSPO07 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO07 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_07, 

CASE
    WHEN WTSPO08 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO08 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_08, 

CASE
    WHEN WTSPO09 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO09 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_09, 

CASE
    WHEN WTSPO10 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO10 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_10, 

CASE
    WHEN WTSPO11 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO11 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_11, 

CASE
    WHEN WTSPO12 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO12 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_12, 

CASE
    WHEN WTSPO13 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO13 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_13, 

CASE
    WHEN WTSPO14 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO14 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_14, 

CASE
    WHEN WTSPO15 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO15 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_15, 

CASE
    WHEN WTSPO16 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO16 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_16, 

CASE
    WHEN WTSPO17 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO17 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_17, 

CASE
    WHEN WTSPO18 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO18 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_18, 

CASE
    WHEN WTSPO19 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO19 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_19, 

CASE
    WHEN WTSPO20 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO20 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_20, 

CASE
    WHEN WTSPO21 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO21 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_21, 

CASE
    WHEN WTSPO22 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO22 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_22, 

CASE
    WHEN WTSPO23 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO23 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_23, 

CASE
    WHEN WTSPO24 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO24 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_24, 

CASE
    WHEN WTSPO25 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO25 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_25, 

CASE
    WHEN WTSPO26 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO26 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_26, 

CASE
    WHEN WTSPO27 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO27 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_27, 

CASE
    WHEN WTSPO28 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO28 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_28, 

CASE
    WHEN WTSPO29 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO29 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_29, 

CASE
    WHEN WTSPO30 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO30 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_30, 

CASE
    WHEN WTSPO31 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO31 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_31, 

CASE
    WHEN WTSPO32 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO32 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_32, 

CASE
    WHEN WTSPO33 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO33 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_33, 

CASE
    WHEN WTSPO34 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO34 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_34, 

CASE
    WHEN WTSPO35 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO35 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_35, 

CASE
    WHEN WTSPO36 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO36 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_36, 

CASE
    WHEN WTSPO37 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO37 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_37, 

CASE
    WHEN WTSPO38 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO38 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_38, 

CASE
    WHEN WTSPO39 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO39 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_39, 

CASE
    WHEN WTSPO40 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO40 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_40, 

CASE
    WHEN WTSPO41 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO41 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_41, 

CASE
    WHEN WTSPO42 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO42 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_42, 

CASE
    WHEN WTSPO43 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO43 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_43, 

CASE
    WHEN WTSPO44 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO44 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_44, 

CASE
    WHEN WTSPO45 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO45 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_45, 

CASE
    WHEN WTSPO46 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO46 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_46, 

CASE
    WHEN WTSPO47 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO47 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_47, 

CASE
    WHEN WTSPO48 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO48 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_48, 

CASE
    WHEN WTSPO49 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO49 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_49, 

CASE
    WHEN WTSPO50 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO50 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_50, 

CASE
    WHEN WTSPO51 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO51 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_51, 

CASE
    WHEN WTSPO52 IS NULL THEN NULL 
ELSE SAFE_CAST(WTSPO52 AS FLOAT64) 
 END as dioxins_mec_weight_jack_knife_rep_52, 

CASE
    WHEN LBDBHC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDBHC AS FLOAT64) 
 END as beta_hexachlorocyclohexane_ng_g_LBDBHC, 

CASE
    WHEN LBDBHCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBDBHCLA AS FLOAT64) 
 END as b_hexachlorocyclohexane_lipid_adj_ng_g_LBDBHCLA, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dioxins_furans_coplanar_pcbs_laboratory') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/L28DFP_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/L28POC_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/LAB28POC.htm
*/
