SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Safety exclusion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'SP refusal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Time constraints' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCCT1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN PEASCCT1 IS NULL THEN NULL 
ELSE SAFE_CAST(PEASCCT1 AS STRING) 
 END as blood_pressure_comment, 

CASE
WHEN BPXCHR IS NULL THEN NULL 
ELSE SAFE_CAST(BPXCHR AS FLOAT64) 
 END as exa_60_sec_hr_30_sec_hr_2, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAARM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAARM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAARM AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPAARM IS NULL THEN NULL 
ELSE SAFE_CAST(BPAARM AS STRING) 
 END as arm_selected, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPACSZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Infant (6X12)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPACSZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Child (9X17)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPACSZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Adult (12X22)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPACSZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Large (15X32)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPACSZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Thigh (18X35)' -- categorize numeric values
WHEN BPACSZ IS NULL THEN NULL 
ELSE SAFE_CAST(BPACSZ AS STRING) 
 END as coded_cuff_size, 

CASE
WHEN BPXPLS IS NULL THEN NULL 
ELSE SAFE_CAST(BPXPLS AS FLOAT64) 
 END as exa_60_sec_pulse_30_sec_pulse_2, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPXPULS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Regular' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPXPULS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Irregular' -- categorize numeric values
WHEN BPXPULS IS NULL THEN NULL 
ELSE SAFE_CAST(BPXPULS AS STRING) 
 END as pulse_regular_or_irregular, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPXPTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Radial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPXPTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Brachial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPXPTY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPXPTY IS NULL THEN NULL 
ELSE SAFE_CAST(BPXPTY AS STRING) 
 END as pulse_type, 

CASE
WHEN BPXML1 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXML1 AS FLOAT64) 
 END as mil_maximum_inflation_levels_mm_hg, 

CASE
WHEN BPXSY1 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXSY1 AS FLOAT64) 
 END as systolic_blood_pres_1st_rdg_mm_hg, 

CASE
WHEN BPXDI1 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDI1 AS FLOAT64) 
 END as diastolic_blood_pres_1st_rdg_mm_hg, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPAEN1 IS NULL THEN NULL 
ELSE SAFE_CAST(BPAEN1 AS STRING) 
 END as enhancement_used_first_reading, 

CASE
WHEN BPXSY2 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXSY2 AS FLOAT64) 
 END as systolic_blood_pres_2nd_rdg_mm_hg, 

CASE
WHEN BPXDI2 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDI2 AS FLOAT64) 
 END as diastolic_blood_pres_2nd_rdg_mm_hg, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPAEN2 IS NULL THEN NULL 
ELSE SAFE_CAST(BPAEN2 AS STRING) 
 END as enhancement_used_second_reading, 

CASE
WHEN BPXSY3 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXSY3 AS FLOAT64) 
 END as systolic_blood_pres_3rd_rdg_mm_hg, 

CASE
WHEN BPXDI3 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDI3 AS FLOAT64) 
 END as diastolic_blood_pres_3rd_rdg_mm_hg, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPAEN3 IS NULL THEN NULL 
ELSE SAFE_CAST(BPAEN3 AS STRING) 
 END as enhancement_used_third_reading, 

CASE
WHEN BPXSY4 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXSY4 AS FLOAT64) 
 END as systolic_blood_pres_4th_rdg_mm_hg, 

CASE
WHEN BPXDI4 IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDI4 AS FLOAT64) 
 END as diastolic_blood_pres_4th_rdg_mm_hg, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN4 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN4 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPAEN4 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Could not obtain' -- categorize numeric values
WHEN BPAEN4 IS NULL THEN NULL 
ELSE SAFE_CAST(BPAEN4 AS STRING) 
 END as enhancement_used_fourth_reading, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Complete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Partial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(PEASCST1 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN PEASCST1 IS NULL THEN NULL 
ELSE SAFE_CAST(PEASCST1 AS STRING) 
 END as blood_pressure_status, 

CASE
WHEN PEASCTM1 IS NULL THEN NULL 
ELSE SAFE_CAST(PEASCTM1 AS FLOAT64) 
 END as blood_pressure_time_in_seconds, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BPQ150A IS NULL THEN NULL 
ELSE SAFE_CAST(BPQ150A AS STRING) 
 END as had_food_in_the_past_30_minutes, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BPQ150B IS NULL THEN NULL 
ELSE SAFE_CAST(BPQ150B AS STRING) 
 END as had_alcohol_in_the_past_30_minutes, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BPQ150C IS NULL THEN NULL 
ELSE SAFE_CAST(BPQ150C AS STRING) 
 END as had_coffee_in_the_past_30_minutes, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BPQ150D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN BPQ150D IS NULL THEN NULL 
ELSE SAFE_CAST(BPQ150D AS STRING) 
 END as had_cigarettes_in_the_past_30_minutes, 

CASE
WHEN BPXDB IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDB AS FLOAT64) 
 END as of_dropped_beats_in_30_seconds, 

CASE
WHEN BPXSAR IS NULL THEN NULL 
ELSE SAFE_CAST(BPXSAR AS FLOAT64) 
 END as sbp_average_reported_to_examinee, 

CASE
WHEN BPXDAR IS NULL THEN NULL 
ELSE SAFE_CAST(BPXDAR AS FLOAT64) 
 END as dbp_average_reported_to_examinee, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_blood_pressure_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/BPX_I.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/BPX_H.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2011-2012/BPX_G.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2009-2010/BPX_F.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/BPX_E.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/BPX_D.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/BPX_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/BPX_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/BPX.htm
*/
