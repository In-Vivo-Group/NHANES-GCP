SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN WTDRD1 IS NULL THEN NULL 
ELSE SAFE_CAST(WTDRD1 AS FLOAT64) 
 END as dietary_day_one_2_year_sample_weight, 

CASE
    WHEN WTDR4YR IS NULL THEN NULL 
ELSE SAFE_CAST(WTDR4YR AS FLOAT64) 
 END as dietary_day_one_4_year_sample_weight, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Reliable and met the minimum criteria' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Not reliable or not met the minimum criteria' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Reported consuming breast-milk' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTZ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN DRDDRSTZ IS NULL THEN NULL 
ELSE SAFE_CAST(DRDDRSTZ AS STRING) 
 END as dietary_recall_status, 

CASE
    WHEN DRDEXMER IS NULL THEN NULL 
ELSE SAFE_CAST(DRDEXMER AS FLOAT64) 
 END as interviewer_id_code, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Sunday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Monday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Tuesday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Wednesday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Thursday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Friday' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDAY AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Saturday' -- categorize numeric values
WHEN DRDDAY IS NULL THEN NULL 
ELSE SAFE_CAST(DRDDAY AS STRING) 
 END as intake_day_of_the_week, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRALANG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'English' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRALANG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Spanish' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRALANG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'English and Spanish' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRALANG AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN DRALANG IS NULL THEN NULL 
ELSE SAFE_CAST(DRALANG AS STRING) 
 END as language_sp_proxy_used_mostly, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDRESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'SP' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDRESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Proxy' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDRESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'SP and proxy' -- categorize numeric values
WHEN DRDRESP IS NULL THEN NULL 
ELSE SAFE_CAST(DRDRESP AS STRING) 
 END as main_respondent_for_the_interview, 

CASE
    WHEN DRXTNUMF IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTNUMF AS FLOAT64) 
 END as number_of_foods, 

CASE
    WHEN DRXTKCAL IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTKCAL AS FLOAT64) 
 END as energy_kcal, 

CASE
    WHEN DRXTPROT IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTPROT AS FLOAT64) 
 END as protein_gm, 

CASE
    WHEN DRXTCARB IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCARB AS FLOAT64) 
 END as carbohydrate_gm, 

CASE
    WHEN DRXTSUGR IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTSUGR AS FLOAT64) 
 END as total_sugars_gm, 

CASE
    WHEN DRXTFIBE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTFIBE AS FLOAT64) 
 END as dietary_fiber_gm, 

CASE
    WHEN DRXTTFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTTFAT AS FLOAT64) 
 END as total_fat_gm, 

CASE
    WHEN DRXTSFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTSFAT AS FLOAT64) 
 END as total_saturated_fatty_acids_gm, 

CASE
    WHEN DRXTMFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTMFAT AS FLOAT64) 
 END as total_monounsaturated_fatty_acids_gm, 

CASE
    WHEN DRXTPFAT IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTPFAT AS FLOAT64) 
 END as total_polyunsaturated_fatty_acids_gm, 

CASE
    WHEN DRXTCHOL IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCHOL AS FLOAT64) 
 END as cholesterol_mg, 

CASE
    WHEN DRXTATOC IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTATOC AS FLOAT64) 
 END as vitamin_e_as_alpha_tocopherol_mg, 

CASE
    WHEN DRXTRET IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTRET AS FLOAT64) 
 END as retinol_mcg, 

CASE
    WHEN DRXTVARA IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVARA AS FLOAT64) 
 END as vitamin_a_rae_mcg, 

CASE
    WHEN DRXTACAR IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTACAR AS FLOAT64) 
 END as alpha_carotene_mcg, 

CASE
    WHEN DRXTBCAR IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTBCAR AS FLOAT64) 
 END as beta_carotene_mcg, 

CASE
    WHEN DRXTCRYP IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCRYP AS FLOAT64) 
 END as beta_cryptoxanthin_mcg, 

CASE
    WHEN DRXTLYCO IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTLYCO AS FLOAT64) 
 END as lycopene_mcg, 

CASE
    WHEN DRXTLZ IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTLZ AS FLOAT64) 
 END as lutein_zeaxanthin_mcg, 

CASE
    WHEN DRXTVB1 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVB1 AS FLOAT64) 
 END as thiamin_vitamin_b1_mg, 

CASE
    WHEN DRXTVB2 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVB2 AS FLOAT64) 
 END as riboflavin_vitamin_b2_mg, 

CASE
    WHEN DRXTNIAC IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTNIAC AS FLOAT64) 
 END as niacin_mg, 

CASE
    WHEN DRXTVB6 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVB6 AS FLOAT64) 
 END as vitamin_b6_mg, 

CASE
    WHEN DRXTFOLA IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTFOLA AS FLOAT64) 
 END as total_folate_mcg, 

CASE
    WHEN DRXTFA IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTFA AS FLOAT64) 
 END as folic_acid_mcg, 

CASE
    WHEN DRXTFF IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTFF AS FLOAT64) 
 END as food_folate_mcg, 

CASE
    WHEN DRXTFDFE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTFDFE AS FLOAT64) 
 END as folate_dfe_mcg, 

CASE
    WHEN DRXTVB12 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVB12 AS FLOAT64) 
 END as vitamin_b12_mcg, 

CASE
    WHEN DRXTVC IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVC AS FLOAT64) 
 END as vitamin_c_mg, 

CASE
    WHEN DRXTVK IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVK AS FLOAT64) 
 END as vitamin_k_mcg, 

CASE
    WHEN DRXTCALC IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCALC AS FLOAT64) 
 END as calcium_mg, 

CASE
    WHEN DRXTPHOS IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTPHOS AS FLOAT64) 
 END as phosphorus_mg, 

CASE
    WHEN DRXTMAGN IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTMAGN AS FLOAT64) 
 END as magnesium_mg, 

CASE
    WHEN DRXTIRON IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTIRON AS FLOAT64) 
 END as iron_mg, 

CASE
    WHEN DRXTZINC IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTZINC AS FLOAT64) 
 END as zinc_mg, 

CASE
    WHEN DRXTCOPP IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCOPP AS FLOAT64) 
 END as copper_mg, 

CASE
    WHEN DRDTSODI IS NULL THEN NULL 
ELSE SAFE_CAST(DRDTSODI AS FLOAT64) 
 END as sodium_mg, 

CASE
    WHEN DRXTPOTA IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTPOTA AS FLOAT64) 
 END as potassium_mg, 

CASE
    WHEN DRXTSELE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTSELE AS FLOAT64) 
 END as selenium_mcg, 

CASE
    WHEN DRXTCAFF IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCAFF AS FLOAT64) 
 END as caffeine_mg, 

CASE
    WHEN DRXTTHEO IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTTHEO AS FLOAT64) 
 END as theobromine_mg, 

CASE
    WHEN DRXTALCO IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTALCO AS FLOAT64) 
 END as alcohol_gm, 

CASE
    WHEN DRXTMOIS IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTMOIS AS FLOAT64) 
 END as moisture_gm, 

CASE
    WHEN DRXTS040 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS040 AS FLOAT64) 
 END as sfa_4_0_butanoic_gm, 

CASE
    WHEN DRXTS060 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS060 AS FLOAT64) 
 END as sfa_6_0_hexanoic_gm, 

CASE
    WHEN DRXTS080 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS080 AS FLOAT64) 
 END as sfa_8_0_octanoic_gm, 

CASE
    WHEN DRXTS100 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS100 AS FLOAT64) 
 END as sfa_10_0_decanoic_gm, 

CASE
    WHEN DRXTS120 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS120 AS FLOAT64) 
 END as sfa_12_0_dodecanoic_gm, 

CASE
    WHEN DRXTS140 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS140 AS FLOAT64) 
 END as sfa_14_0_tetradecanoic_gm, 

CASE
    WHEN DRXTS160 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS160 AS FLOAT64) 
 END as sfa_16_0_hexadecanoic_gm, 

CASE
    WHEN DRXTS180 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTS180 AS FLOAT64) 
 END as sfa_18_0_octadecanoic_gm, 

CASE
    WHEN DRXTM161 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTM161 AS FLOAT64) 
 END as mfa_16_1_hexadecenoic_gm, 

CASE
    WHEN DRXTM181 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTM181 AS FLOAT64) 
 END as mfa_18_1_octadecenoic_gm, 

CASE
    WHEN DRXTM201 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTM201 AS FLOAT64) 
 END as mfa_20_1_eicosenoic_gm, 

CASE
    WHEN DRXTM221 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTM221 AS FLOAT64) 
 END as mfa_22_1_docosenoic_gm, 

CASE
    WHEN DRXTP182 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP182 AS FLOAT64) 
 END as pfa_18_2_octadecadienoic_gm, 

CASE
    WHEN DRXTP183 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP183 AS FLOAT64) 
 END as pfa_18_3_octadecatrienoic_gm, 

CASE
    WHEN DRXTP184 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP184 AS FLOAT64) 
 END as pfa_18_4_octadecatetraenoic_gm, 

CASE
    WHEN DRXTP204 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP204 AS FLOAT64) 
 END as pfa_20_4_eicosatetraenoic_gm, 

CASE
    WHEN DRXTP205 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP205 AS FLOAT64) 
 END as pfa_20_5_eicosapentaenoic_gm, 

CASE
    WHEN DRXTP225 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP225 AS FLOAT64) 
 END as pfa_22_5_docosapentaenoic_gm, 

CASE
    WHEN DRXTP226 IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTP226 AS FLOAT64) 
 END as pfa_22_6_docosahexaenoic_gm, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Much more than usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Much less than usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRD300 IS NULL THEN NULL 
ELSE SAFE_CAST(DRD300 AS STRING) 
 END as compare_food_consumed_yesterday_to_usual, 

CASE
    WHEN DRD320GW IS NULL THEN NULL 
ELSE SAFE_CAST(DRD320GW AS FLOAT64) 
 END as total_plain_water_drank_yesterday_gm, 

CASE
    WHEN DRD330GW IS NULL THEN NULL 
ELSE SAFE_CAST(DRD330GW AS FLOAT64) 
 END as total_tap_water_drank_yesterday_gm, 

CASE
    WHEN DRDCWATR IS NULL THEN NULL 
ELSE SAFE_CAST(DRDCWATR AS FLOAT64) 
 END as plain_carbonated_water_gm, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Ordinary salt [includes regular iodized salt, sea salt and seasoning salts made with regular salt]' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Lite salt' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Salt substitute' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Doesnt use or add salt products at the table' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBQ095 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DBQ095 IS NULL THEN NULL 
ELSE SAFE_CAST(DBQ095 AS STRING) 
 END as type_of_salt_you_use, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DBD100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Rarely' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBD100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Occasionally' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBD100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Very often' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBD100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DBD100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DBD100 IS NULL THEN NULL 
ELSE SAFE_CAST(DBD100 AS STRING) 
 END as how_often_add_salt_to_food_at_table, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRD340 IS NULL THEN NULL 
ELSE SAFE_CAST(DRD340 AS STRING) 
 END as shellfish_eaten_during_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350A IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350A AS STRING) 
 END as clams_eaten_during_past_30_days, 

CASE
    WHEN DRD350AQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350AQ AS FLOAT64) 
 END as of_times_clams_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350B IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350B AS STRING) 
 END as crabs_eaten_during_past_30_days, 

CASE
    WHEN DRD350BQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350BQ AS FLOAT64) 
 END as of_times_crabs_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350C IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350C AS STRING) 
 END as crayfish_eaten_during_past_30_days, 

CASE
    WHEN DRD350CQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350CQ AS FLOAT64) 
 END as of_times_crayfish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350D IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350D AS STRING) 
 END as lobsters_eaten_during_past_30_days, 

CASE
    WHEN DRD350DQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350DQ AS FLOAT64) 
 END as of_times_lobsters_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350E AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350E AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350E IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350E AS STRING) 
 END as mussels_eaten_during_past_30_days, 

CASE
    WHEN DRD350EQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350EQ AS FLOAT64) 
 END as of_times_mussels_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350F AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350F AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350F IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350F AS STRING) 
 END as oysters_eaten_during_past_30_days, 

CASE
    WHEN DRD350FQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350FQ AS FLOAT64) 
 END as of_times_oysters_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350G IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350G AS STRING) 
 END as scallops_eaten_during_past_30_days, 

CASE
    WHEN DRD350GQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350GQ AS FLOAT64) 
 END as of_times_scallops_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350H AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350H AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350H IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350H AS STRING) 
 END as shrimp_eaten_during_past_30_days, 

CASE
    WHEN DRD350HQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350HQ AS FLOAT64) 
 END as of_times_shrimp_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350I AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350I AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350I IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350I AS STRING) 
 END as other_shellfish_eaten_past_30_days, 

CASE
    WHEN DRD350IQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350IQ AS FLOAT64) 
 END as of_times_other_shellfish_eaten, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350J AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350J AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350J IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350J AS STRING) 
 END as other_unknown_shellfish_eaten_past_30_d, 

CASE
    WHEN DRD350JQ IS NOT NULL THEN SAFE_CAST(DRD350JQ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DRD350JQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350JQ AS FLOAT64) 
 END as of_times_other_unknown_shellfish_eaten, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350K AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD350K AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD350K IS NULL THEN NULL 
ELSE SAFE_CAST(DRD350K AS STRING) 
 END as refused_on_shellfish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRD360 IS NULL THEN NULL 
ELSE SAFE_CAST(DRD360 AS STRING) 
 END as fish_eaten_during_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370A AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370A IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370A AS STRING) 
 END as breaded_fish_products_eaten_past_30_days, 

CASE
    WHEN DRD370AQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370AQ AS FLOAT64) 
 END as of_times_breaded_fish_products_eaten, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370B AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370B IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370B AS STRING) 
 END as tuna_eaten_during_past_30_days, 

CASE
    WHEN DRD370BQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370BQ AS FLOAT64) 
 END as of_times_tuna_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370C AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370C IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370C AS STRING) 
 END as bass_eaten_during_past_30_days, 

CASE
    WHEN DRD370CQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370CQ AS FLOAT64) 
 END as of_times_bass_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370D AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370D IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370D AS STRING) 
 END as catfish_eaten_during_past_30_days, 

CASE
    WHEN DRD370DQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370DQ AS FLOAT64) 
 END as of_times_catfish_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370E AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370E AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370E IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370E AS STRING) 
 END as cod_eaten_during_past_30_days, 

CASE
    WHEN DRD370EQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370EQ AS FLOAT64) 
 END as of_times_cod_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370F AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370F AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370F IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370F AS STRING) 
 END as flatfish_eaten_during_past_30_days, 

CASE
    WHEN DRD370FQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370FQ AS FLOAT64) 
 END as of_times_flatfish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370G IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370G AS STRING) 
 END as haddock_eaten_during_past_30_days, 

CASE
    WHEN DRD370GQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370GQ AS FLOAT64) 
 END as of_times_haddock_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370H AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370H AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370H IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370H AS STRING) 
 END as mackerel_eaten_during_past_30_days, 

CASE
    WHEN DRD370HQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370HQ AS FLOAT64) 
 END as of_times_mackerel_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370I AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370I AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370I IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370I AS STRING) 
 END as perch_eaten_during_past_30_days, 

CASE
    WHEN DRD370IQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370IQ AS FLOAT64) 
 END as of_times_perch_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370J AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370J AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370J IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370J AS STRING) 
 END as pike_eaten_during_past_30_days, 

CASE
    WHEN DRD370JQ IS NOT NULL THEN SAFE_CAST(DRD370JQ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DRD370JQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370JQ AS FLOAT64) 
 END as of_times_pike_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370K AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370K AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370K IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370K AS STRING) 
 END as pollock_eaten_during_past_30_days, 

CASE
    WHEN DRD370KQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370KQ AS FLOAT64) 
 END as of_times_pollock_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370L AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370L AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370L IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370L AS STRING) 
 END as porgy_eaten_during_past_30_days, 

CASE
    WHEN DRD370LQ IS NOT NULL THEN SAFE_CAST(DRD370LQ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DRD370LQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370LQ AS FLOAT64) 
 END as of_times_porgy_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370M AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370M AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370M IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370M AS STRING) 
 END as salmon_eaten_during_past_30_days, 

CASE
    WHEN DRD370MQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370MQ AS FLOAT64) 
 END as of_times_salmon_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370N AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370N AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370N IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370N AS STRING) 
 END as sardines_eaten_during_past_30_days, 

CASE
    WHEN DRD370NQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370NQ AS FLOAT64) 
 END as of_times_sardines_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370O AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370O AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370O IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370O AS STRING) 
 END as sea_bass_eaten_during_past_30_days, 

CASE
    WHEN DRD370OQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370OQ AS FLOAT64) 
 END as of_times_sea_bass_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370P AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370P AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370P IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370P AS STRING) 
 END as shark_eaten_during_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370PQ AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '1' -- categorize numeric values
WHEN DRD370PQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370PQ AS STRING) 
 END as of_times_shark_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370Q AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370Q AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370Q IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370Q AS STRING) 
 END as swordfish_eaten_during_past_30_days, 

CASE
    WHEN DRD370QQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370QQ AS FLOAT64) 
 END as of_times_swordfish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370R AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370R AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370R IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370R AS STRING) 
 END as trout_eaten_during_past_30_days, 

CASE
    WHEN DRD370RQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370RQ AS FLOAT64) 
 END as of_times_trout_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370S AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370S AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370S IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370S AS STRING) 
 END as walleye_eaten_during_past_30_days, 

CASE
    WHEN DRD370SQ IS NOT NULL THEN SAFE_CAST(DRD370SQ AS FLOAT64) -- correct wrong data types for numerical data 
WHEN DRD370SQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370SQ AS FLOAT64) 
 END as of_times_walleye_eaten_in_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370T AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370T AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370T IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370T AS STRING) 
 END as other_fish_eaten_during_past_30_days, 

CASE
    WHEN DRD370TQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370TQ AS FLOAT64) 
 END as of_times_other_fish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370U AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370U AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370U IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370U AS STRING) 
 END as other_unknown_fish_eaten_in_past_30_days, 

CASE
    WHEN DRD370UQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370UQ AS FLOAT64) 
 END as of_times_other_unknown_fish_eaten, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370V AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRD370V AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN DRD370V IS NULL THEN NULL 
ELSE SAFE_CAST(DRD370V AS STRING) 
 END as refused_on_fish_eaten_past_30_days, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Reliable and meet minimum criteria' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Reliable but not meet minimum criteria' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not reliable' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Breast-fed infant or child' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDDRSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN DRDDRSTS IS NULL THEN NULL 
ELSE SAFE_CAST(DRDDRSTS AS STRING) 
 END as dietary_recall_status_DRDDRSTS, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRASCST2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Complete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRASCST2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Partial' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRASCST2 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not done' -- categorize numeric values
WHEN DRASCST2 IS NULL THEN NULL 
ELSE SAFE_CAST(DRASCST2 AS STRING) 
 END as post_dietary_recall_section_status, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDAINMD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'In-person' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDAINMD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Telephone' -- categorize numeric values
WHEN DRDAINMD IS NULL THEN NULL 
ELSE SAFE_CAST(DRDAINMD AS STRING) 
 END as assigned_mode_of_interview, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDINTMD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'In-person' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDINTMD AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Telephone' -- categorize numeric values
WHEN DRDINTMD IS NULL THEN NULL 
ELSE SAFE_CAST(DRDINTMD AS STRING) 
 END as mode_of_interview, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRARESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'SP' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRARESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Proxy' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRARESP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'SP and proxy' -- categorize numeric values
WHEN DRARESP IS NULL THEN NULL 
ELSE SAFE_CAST(DRARESP AS STRING) 
 END as main_respondent_for_the_interview_DRARESP, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDTSODF AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'No sodium adjustment done' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRDTSODF AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Total sodium intake adjusted for salt use in food preparation' -- categorize numeric values
WHEN DRDTSODF IS NULL THEN NULL 
ELSE SAFE_CAST(DRDTSODF AS STRING) 
 END as salt_adjustment_flag, 

CASE
    WHEN DRXTVAIU IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVAIU AS FLOAT64) 
 END as vitamin_a_iu, 

CASE
    WHEN DRXTVARE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVARE AS FLOAT64) 
 END as vitamin_a_re, 

CASE
    WHEN DRXTCARO IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTCARO AS FLOAT64) 
 END as carotene_re, 

CASE
    WHEN DRXTVE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTVE AS FLOAT64) 
 END as vitamin_e_ate_mg, 

CASE
    WHEN DRXTWATE IS NULL THEN NULL 
ELSE SAFE_CAST(DRXTWATE AS FLOAT64) 
 END as moisture_gm_DRXTWATE, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Less than usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'More than usual' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ300 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRQ300 IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ300 AS STRING) 
 END as compare_food_consumed_yesterday_to_usual_DRQ300, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ340 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRQ340 IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ340 AS STRING) 
 END as shellfish_eaten_during_past_30_days_DRQ340, 

CASE
    WHEN DRQ350AQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350AQ AS FLOAT64) 
 END as num_times_clams_eaten_in_past_30_days, 

CASE
    WHEN DRQ350BQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350BQ AS FLOAT64) 
 END as num_times_crabs_eaten_in_past_30_days, 

CASE
    WHEN DRQ350CQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350CQ AS FLOAT64) 
 END as num_times_crayfish_eaten_in_past_30_days, 

CASE
    WHEN DRQ350DQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350DQ AS FLOAT64) 
 END as num_times_lobsters_eaten_in_past_30_days, 

CASE
    WHEN DRQ350EQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350EQ AS FLOAT64) 
 END as num_times_mussels_eaten_in_past_30_days, 

CASE
    WHEN DRQ350FQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350FQ AS FLOAT64) 
 END as num_times_oysters_eaten_in_past_30_days, 

CASE
    WHEN DRQ350GQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350GQ AS FLOAT64) 
 END as num_times_scallops_eaten_in_past_30_days, 

CASE
    WHEN DRQ350HQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350HQ AS FLOAT64) 
 END as num_times_shrimp_eaten_in_past_30_days, 

CASE
    WHEN DRQ350IQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350IQ AS FLOAT64) 
 END as num_times_other_shellfish_eaten, 

CASE
    WHEN DRQ350JQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ350JQ AS FLOAT64) 
 END as num_times_other_unknown_shellfish_eaten, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DRQ360 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN DRQ360 IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ360 AS STRING) 
 END as fish_eaten_during_past_30_days_DRQ360, 

CASE
    WHEN DRQ370AQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370AQ AS FLOAT64) 
 END as num_times_breaded_fish_products_eaten, 

CASE
    WHEN DRQ370BQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370BQ AS FLOAT64) 
 END as num_times_tuna_eaten_in_past_30_days, 

CASE
    WHEN DRQ370CQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370CQ AS FLOAT64) 
 END as num_times_bass_eaten_in_past_30_days, 

CASE
    WHEN DRQ370DQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370DQ AS FLOAT64) 
 END as num_times_catfish_eaten_in_past_30_days, 

CASE
    WHEN DRQ370EQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370EQ AS FLOAT64) 
 END as num_times_cod_eaten_in_past_30_days, 

CASE
    WHEN DRQ370FQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370FQ AS FLOAT64) 
 END as num_times_flatfish_eaten_in_past_30_days, 

CASE
    WHEN DRQ370GQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370GQ AS FLOAT64) 
 END as num_times_haddock_eaten_in_past_30_days, 

CASE
    WHEN DRQ370HQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370HQ AS FLOAT64) 
 END as num_times_mackerel_eaten_in_past_30_days, 

CASE
    WHEN DRQ370IQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370IQ AS FLOAT64) 
 END as num_times_perch_eaten_in_past_30_days, 

CASE
    WHEN DRQ370JQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370JQ AS FLOAT64) 
 END as num_times_pike_eaten_in_past_30_days, 

CASE
    WHEN DRQ370KQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370KQ AS FLOAT64) 
 END as num_times_pollock_eaten_in_past_30_days, 

CASE
    WHEN DRQ370LQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370LQ AS FLOAT64) 
 END as num_times_porgy_eaten_in_past_30_days, 

CASE
    WHEN DRQ370MQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370MQ AS FLOAT64) 
 END as num_times_salmon_eaten_in_past_30_days, 

CASE
    WHEN DRQ370NQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370NQ AS FLOAT64) 
 END as num_times_sardines_eaten_in_past_30_days, 

CASE
    WHEN DRQ370OQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370OQ AS FLOAT64) 
 END as num_times_sea_bass_eaten_in_past_30_days, 

CASE
    WHEN DRQ370PQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370PQ AS FLOAT64) 
 END as num_times_shark_eaten_in_past_30_days, 

CASE
    WHEN DRQ370QQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370QQ AS FLOAT64) 
 END as num_times_swordfish_eaten_past_30_days, 

CASE
    WHEN DRQ370RQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370RQ AS FLOAT64) 
 END as num_times_trout_eaten_in_past_30_days, 

CASE
    WHEN DRQ370SQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370SQ AS FLOAT64) 
 END as num_times_walleye_eaten_in_past_30_days, 

CASE
    WHEN DRQ370TQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370TQ AS FLOAT64) 
 END as num_times_other_fish_eaten_past_30_days, 

CASE
    WHEN DRQ370UQ IS NULL THEN NULL 
ELSE SAFE_CAST(DRQ370UQ AS FLOAT64) 
 END as num_times_other_unknown_fish_eaten, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dietary_interview_total_nutrient_intakes_dietary') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/DRXTOT_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/DRXTOT.htm
*/
