SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Examination completed' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Examination incomplete' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Not examined, pregnancy' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Not examined, weight > 300 lbs' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Not examined, jewelry or other objects not removed or metal in body' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIAEXSTS AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Not examined, other reason' -- categorize numeric values
WHEN BIAEXSTS IS NULL THEN NULL 
ELSE SAFE_CAST(BIAEXSTS AS STRING) 
 END as bia_status, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'Excellent' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Good' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Marginal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Questionable' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Bad' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Could not be fit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(BIDFIT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'No BIA data' -- categorize numeric values
WHEN BIDFIT IS NULL THEN NULL 
ELSE SAFE_CAST(BIDFIT AS STRING) 
 END as quality_of_fit_to_cole_model, 

CASE
WHEN BIDRECF IS NULL THEN NULL 
ELSE SAFE_CAST(BIDRECF AS FLOAT64) 
 END as resistance_ohms_of_extracellular_fluid, 

CASE
WHEN BIDRICF IS NULL THEN NULL 
ELSE SAFE_CAST(BIDRICF AS FLOAT64) 
 END as resistance_ohms_of_intracellular_fluid, 

CASE
WHEN BIDCM IS NULL THEN NULL 
ELSE SAFE_CAST(BIDCM AS FLOAT64) 
 END as cell_membrane_capacitance_nf, 

CASE
WHEN BIDTD IS NULL THEN NULL 
ELSE SAFE_CAST(BIDTD AS FLOAT64) 
 END as time_delay_ns, 

CASE
WHEN BIDALPHA IS NULL THEN NULL 
ELSE SAFE_CAST(BIDALPHA AS FLOAT64) 
 END as exponent_alpha, 

CASE
WHEN BIDFC IS NULL THEN NULL 
ELSE SAFE_CAST(BIDFC AS FLOAT64) 
 END as characteristic_frequency_khz, 

CASE
WHEN BIDECF IS NULL THEN NULL 
ELSE SAFE_CAST(BIDECF AS FLOAT64) 
 END as estimated_extracellular_fluid_volume_l, 

CASE
WHEN BIDTBW IS NULL THEN NULL 
ELSE SAFE_CAST(BIDTBW AS FLOAT64) 
 END as estimated_total_water_body_volume_l, 

CASE
WHEN BIDICF IS NULL THEN NULL 
ELSE SAFE_CAST(BIDICF AS FLOAT64) 
 END as estimated_intracellular_fluid_volume_l, 

CASE
WHEN BIDFFM IS NULL THEN NULL 
ELSE SAFE_CAST(BIDFFM AS FLOAT64) 
 END as estimated_fat_free_mass_kg, 

CASE
WHEN BIDFAT IS NULL THEN NULL 
ELSE SAFE_CAST(BIDFAT AS FLOAT64) 
 END as estimated_fat_mass_kg, 

CASE
WHEN BIDPFAT IS NULL THEN NULL 
ELSE SAFE_CAST(BIDPFAT AS FLOAT64) 
 END as estimated_percent_body_fat, 

CASE
WHEN BIXS005K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS005K AS FLOAT64) 
 END as resistance_ohms_5_khz, 

CASE
WHEN BIXS006K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS006K AS FLOAT64) 
 END as resistance_ohms_6_khz, 

CASE
WHEN BIXS007K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS007K AS FLOAT64) 
 END as resistance_ohms_7_khz, 

CASE
WHEN BIXS008K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS008K AS FLOAT64) 
 END as resistance_ohms_8_khz, 

CASE
WHEN BIXS009K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS009K AS FLOAT64) 
 END as resistance_ohms_9_khz, 

CASE
WHEN BIXS010K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS010K AS FLOAT64) 
 END as resistance_ohms_10_khz, 

CASE
WHEN BIXS011K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS011K AS FLOAT64) 
 END as resistance_ohms_11_khz, 

CASE
WHEN BIXS012K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS012K AS FLOAT64) 
 END as resistance_ohms_12_khz, 

CASE
WHEN BIXS013K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS013K AS FLOAT64) 
 END as resistance_ohms_13_khz, 

CASE
WHEN BIXS014K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS014K AS FLOAT64) 
 END as resistance_ohms_14_khz, 

CASE
WHEN BIXS015K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS015K AS FLOAT64) 
 END as resistance_ohms_15_khz, 

CASE
WHEN BIXS016K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS016K AS FLOAT64) 
 END as resistance_ohms_16_khz, 

CASE
WHEN BIXS018K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS018K AS FLOAT64) 
 END as resistance_ohms_18_khz, 

CASE
WHEN BIXS020K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS020K AS FLOAT64) 
 END as resistance_ohms_20_khz, 

CASE
WHEN BIXS023K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS023K AS FLOAT64) 
 END as resistance_ohms_23_khz, 

CASE
WHEN BIXS025K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS025K AS FLOAT64) 
 END as resistance_ohms_25_khz, 

CASE
WHEN BIXS028K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS028K AS FLOAT64) 
 END as resistance_ohms_28_khz, 

CASE
WHEN BIXS031K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS031K AS FLOAT64) 
 END as resistance_ohms_31_khz, 

CASE
WHEN BIXS035K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS035K AS FLOAT64) 
 END as resistance_ohms_35_khz, 

CASE
WHEN BIXS039K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS039K AS FLOAT64) 
 END as resistance_ohms_39_khz, 

CASE
WHEN BIXS043K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS043K AS FLOAT64) 
 END as resistance_ohms_43_khz, 

CASE
WHEN BIXS050K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS050K AS FLOAT64) 
 END as resistance_ohms_50_khz, 

CASE
WHEN BIXS054K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS054K AS FLOAT64) 
 END as resistance_ohms_54_khz, 

CASE
WHEN BIXS060K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS060K AS FLOAT64) 
 END as resistance_ohms_60_khz, 

CASE
WHEN BIXS067K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS067K AS FLOAT64) 
 END as resistance_ohms_67_khz, 

CASE
WHEN BIXS075K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS075K AS FLOAT64) 
 END as resistance_ohms_75_khz, 

CASE
WHEN BIXS083K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS083K AS FLOAT64) 
 END as resistance_ohms_83_khz, 

CASE
WHEN BIXS093K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS093K AS FLOAT64) 
 END as resistance_ohms_93_khz, 

CASE
WHEN BIXS100K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS100K AS FLOAT64) 
 END as resistance_ohms_100_khz, 

CASE
WHEN BIXS115K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS115K AS FLOAT64) 
 END as resistance_ohms_115_khz, 

CASE
WHEN BIXS128K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS128K AS FLOAT64) 
 END as resistance_ohms_128_khz, 

CASE
WHEN BIXS143K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS143K AS FLOAT64) 
 END as resistance_ohms_143_khz, 

CASE
WHEN BIXS159K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS159K AS FLOAT64) 
 END as resistance_ohms_159_khz, 

CASE
WHEN BIXS177K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS177K AS FLOAT64) 
 END as resistance_ohms_177_khz, 

CASE
WHEN BIXS200K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS200K AS FLOAT64) 
 END as resistance_ohms_200_khz, 

CASE
WHEN BIXS220K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS220K AS FLOAT64) 
 END as resistance_ohms_220_khz, 

CASE
WHEN BIXS245K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS245K AS FLOAT64) 
 END as resistance_ohms_245_khz, 

CASE
WHEN BIXS273K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS273K AS FLOAT64) 
 END as resistance_ohms_273_khz, 

CASE
WHEN BIXS304K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS304K AS FLOAT64) 
 END as resistance_ohms_304_khz, 

CASE
WHEN BIXS339K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS339K AS FLOAT64) 
 END as resistance_ohms_339_khz, 

CASE
WHEN BIXS378K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS378K AS FLOAT64) 
 END as resistance_ohms_378_khz, 

CASE
WHEN BIXS421K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS421K AS FLOAT64) 
 END as resistance_ohms_421_khz, 

CASE
WHEN BIXS469K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS469K AS FLOAT64) 
 END as resistance_ohms_469_khz, 

CASE
WHEN BIXS500K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS500K AS FLOAT64) 
 END as resistance_ohms_500_khz, 

CASE
WHEN BIXS582K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS582K AS FLOAT64) 
 END as resistance_ohms_582_khz, 

CASE
WHEN BIXS649K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS649K AS FLOAT64) 
 END as resistance_ohms_649_khz, 

CASE
WHEN BIXS723K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS723K AS FLOAT64) 
 END as resistance_ohms_723_khz, 

CASE
WHEN BIXS806K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS806K AS FLOAT64) 
 END as resistance_ohms_806_khz, 

CASE
WHEN BIXS898K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS898K AS FLOAT64) 
 END as resistance_ohms_898_khz, 

CASE
WHEN BIXS1M IS NULL THEN NULL 
ELSE SAFE_CAST(BIXS1M AS FLOAT64) 
 END as resistance_ohms_1_mhz, 

CASE
WHEN BIXC005K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC005K AS FLOAT64) 
 END as reactance_ohms_5_khz, 

CASE
WHEN BIXC006K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC006K AS FLOAT64) 
 END as reactance_ohms_6_khz, 

CASE
WHEN BIXC007K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC007K AS FLOAT64) 
 END as reactance_ohms_7_khz, 

CASE
WHEN BIXC008K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC008K AS FLOAT64) 
 END as reactance_ohms_8_khz, 

CASE
WHEN BIXC009K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC009K AS FLOAT64) 
 END as reactance_ohms_9_khz, 

CASE
WHEN BIXC010K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC010K AS FLOAT64) 
 END as reactance_ohms_10_khz, 

CASE
WHEN BIXC011K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC011K AS FLOAT64) 
 END as reactance_ohms_11_khz, 

CASE
WHEN BIXC012K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC012K AS FLOAT64) 
 END as reactance_ohms_12_khz, 

CASE
WHEN BIXC013K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC013K AS FLOAT64) 
 END as reactance_ohms_13_khz, 

CASE
WHEN BIXC014K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC014K AS FLOAT64) 
 END as reactance_ohms_14_khz, 

CASE
WHEN BIXC015K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC015K AS FLOAT64) 
 END as reactance_ohms_15_khz, 

CASE
WHEN BIXC016K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC016K AS FLOAT64) 
 END as reactance_ohms_16_khz, 

CASE
WHEN BIXC018K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC018K AS FLOAT64) 
 END as reactance_ohms_18_khz, 

CASE
WHEN BIXC020K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC020K AS FLOAT64) 
 END as reactance_ohms_20_khz, 

CASE
WHEN BIXC023K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC023K AS FLOAT64) 
 END as reactance_ohms_23_khz, 

CASE
WHEN BIXC025K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC025K AS FLOAT64) 
 END as reactance_ohms_25_khz, 

CASE
WHEN BIXC028K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC028K AS FLOAT64) 
 END as reactance_ohms_28_khz, 

CASE
WHEN BIXC031K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC031K AS FLOAT64) 
 END as reactance_ohms_31_khz, 

CASE
WHEN BIXC035K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC035K AS FLOAT64) 
 END as reactance_ohms_35_khz, 

CASE
WHEN BIXC039K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC039K AS FLOAT64) 
 END as reactance_ohms_39_khz, 

CASE
WHEN BIXC043K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC043K AS FLOAT64) 
 END as reactance_ohms_43_khz, 

CASE
WHEN BIXC050K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC050K AS FLOAT64) 
 END as reactance_ohms_50_khz, 

CASE
WHEN BIXC054K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC054K AS FLOAT64) 
 END as reactance_ohms_54_khz, 

CASE
WHEN BIXC060K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC060K AS FLOAT64) 
 END as reactance_ohms_60_khz, 

CASE
WHEN BIXC067K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC067K AS FLOAT64) 
 END as reactance_ohms_67_khz, 

CASE
WHEN BIXC075K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC075K AS FLOAT64) 
 END as reactance_ohms_75_khz, 

CASE
WHEN BIXC083K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC083K AS FLOAT64) 
 END as reactance_ohms_83_khz, 

CASE
WHEN BIXC093K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC093K AS FLOAT64) 
 END as reactance_ohms_93_khz, 

CASE
WHEN BIXC100K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC100K AS FLOAT64) 
 END as reactance_ohms_100_khz, 

CASE
WHEN BIXC115K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC115K AS FLOAT64) 
 END as reactance_ohms_115_khz, 

CASE
WHEN BIXC128K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC128K AS FLOAT64) 
 END as reactance_ohms_128_khz, 

CASE
WHEN BIXC143K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC143K AS FLOAT64) 
 END as reactance_ohms_143_khz, 

CASE
WHEN BIXC159K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC159K AS FLOAT64) 
 END as reactance_ohms_159_khz, 

CASE
WHEN BIXC177K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC177K AS FLOAT64) 
 END as reactance_ohms_177_khz, 

CASE
WHEN BIXC200K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC200K AS FLOAT64) 
 END as reactance_ohms_200_khz, 

CASE
WHEN BIXC220K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC220K AS FLOAT64) 
 END as reactance_ohms_220_khz, 

CASE
WHEN BIXC245K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC245K AS FLOAT64) 
 END as reactance_ohms_245_khz, 

CASE
WHEN BIXC273K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC273K AS FLOAT64) 
 END as reactance_ohms_273_khz, 

CASE
WHEN BIXC304K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC304K AS FLOAT64) 
 END as reactance_ohms_304_khz, 

CASE
WHEN BIXC339K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC339K AS FLOAT64) 
 END as reactance_ohms_339_khz, 

CASE
WHEN BIXC378K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC378K AS FLOAT64) 
 END as reactance_ohms_378_khz, 

CASE
WHEN BIXC421K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC421K AS FLOAT64) 
 END as reactance_ohms_421_khz, 

CASE
WHEN BIXC469K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC469K AS FLOAT64) 
 END as reactance_ohms_469_khz, 

CASE
WHEN BIXC500K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC500K AS FLOAT64) 
 END as reactance_ohms_500_khz, 

CASE
WHEN BIXC582K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC582K AS FLOAT64) 
 END as reactance_ohms_582_khz, 

CASE
WHEN BIXC649K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC649K AS FLOAT64) 
 END as reactance_ohms_649_khz, 

CASE
WHEN BIXC723K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC723K AS FLOAT64) 
 END as reactance_ohms_723_khz, 

CASE
WHEN BIXC806K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC806K AS FLOAT64) 
 END as reactance_ohms_806_khz, 

CASE
WHEN BIXC898K IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC898K AS FLOAT64) 
 END as reactance_ohms_898_khz, 

CASE
WHEN BIXC1M IS NULL THEN NULL 
ELSE SAFE_CAST(BIXC1M AS FLOAT64) 
 END as reactance_ohms_1_mhz, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_bioelectrical_impedance_analysis_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/BIX_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/BIX_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/BIX.htm
*/
