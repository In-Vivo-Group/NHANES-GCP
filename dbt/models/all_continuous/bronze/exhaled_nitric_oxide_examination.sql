SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXSTAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Two reproducible FENO measurements' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXSTAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'One or more FENO measurement; not reproducible' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXSTAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Attempted exam; no FENO measurements' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXSTAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Medical exclusion; no FENO measurements' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXSTAT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Exam not done; no FENO measurements' -- categorize numeric values
WHEN ENXSTAT IS NULL THEN NULL 
ELSE SAFE_CAST(ENXSTAT AS STRING) 
 END as status_code_for_eno_exam, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Safety exclusion' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'SP refusal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'No time' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Physical limitation' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Communication problem' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Equipment failure' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'SP ill/emergency' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(14 AS FLOAT64),0) AS INT64) THEN 'Interrupted' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(56 AS FLOAT64),0) AS INT64) THEN 'Came late/left early' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(84 AS FLOAT64),0) AS INT64) THEN 'SP with child' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Other' -- categorize numeric values
WHEN ENXCMT IS NULL THEN NULL 
ELSE SAFE_CAST(ENXCMT AS STRING) 
 END as comment_for_eno_exams_not_done, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ010 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ010 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ010 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ010 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ010 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ010 AS STRING) 
 END as breathing_problem_require_oxygen, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ020 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ020 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ020 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ020 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ020 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ020 AS STRING) 
 END as problem_taking_deep_breath, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ040 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ040 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ040 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ040 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ040 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ040 AS STRING) 
 END as smoked_last_hour, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ050 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ050 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ050 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ050 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ050 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ050 AS STRING) 
 END as exercised_strenuously_last_hour, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ060 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ060 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ060 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ060 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ060 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ060 AS STRING) 
 END as ate_or_drink_last_hour, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ070 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ070 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ070 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ070 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ070 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ070 AS STRING) 
 END as ate_no_rich_vegetables_3_hours, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ080 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ080 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ080 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ080 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ080 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ080 AS STRING) 
 END as ate_no_rich_rich_meats_3_hours, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ090 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ090 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ090 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ090 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ090 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ090 AS STRING) 
 END as used_oral_or_inhaled_steroids_2_days, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Refused' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENQ100 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN ENQ100 IS NULL THEN NULL 
ELSE SAFE_CAST(ENQ100 AS STRING) 
 END as cough_cold_resp_illness_7_days, 

CASE
WHEN ENAATMPT IS NULL THEN NULL 
ELSE SAFE_CAST(ENAATMPT AS FLOAT64) 
 END as total_number_of_exhalation_attempts, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR1G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Acceptable measurement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR1G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Could Not Obtain' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR1G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '< 5 ppb' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR1G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '> 300 ppb' -- categorize numeric values
WHEN ENXTR1G IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR1G AS STRING) 
 END as trial_1_result_status, 

CASE
WHEN ENXTR1Q IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR1Q AS FLOAT64) 
 END as trial_1_feno_measurement_ppb, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR2G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Acceptable measurement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR2G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Could Not Obtain' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR2G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '< 5 ppb' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR2G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '> 300 ppb' -- categorize numeric values
WHEN ENXTR2G IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR2G AS STRING) 
 END as trial_2_result_status, 

CASE
WHEN ENXTR2Q IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR2Q AS FLOAT64) 
 END as trial_2_feno_measurement_ppb, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR3G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Acceptable measurement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR3G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Could Not Obtain' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR3G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '< 5 ppb' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR3G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '> 300 ppb' -- categorize numeric values
WHEN ENXTR3G IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR3G AS STRING) 
 END as trial_3_result_status, 

CASE
WHEN ENXTR3Q IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR3Q AS FLOAT64) 
 END as trial_3_feno_measurement_ppb, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR4G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Acceptable measurement' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR4G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Could Not Obtain' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR4G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '< 5 ppb' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(ENXTR4G AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '> 300 ppb' -- categorize numeric values
WHEN ENXTR4G IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR4G AS STRING) 
 END as trial_4_result_status, 

CASE
WHEN ENXTR4Q IS NULL THEN NULL 
ELSE SAFE_CAST(ENXTR4Q AS FLOAT64) 
 END as trial_4_feno_measurement_ppb, 

CASE
WHEN ENXMEAN IS NULL THEN NULL 
ELSE SAFE_CAST(ENXMEAN AS FLOAT64) 
 END as mean_2_reproducible_feno_measures_ppb, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_exhaled_nitric_oxide_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2011-2012/ENX_G.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2009-2010/ENX_F.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/ENX_E.htm
*/
