SELECT
SEQN as respondent_sequence_number, -- could not identify transformation logic 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ110 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ110 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ110 AS STRING) 
 END as sp_has_a_severe_eye_infection, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ121 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both' -- categorize numeric values
WHEN VIQ121 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ121 AS STRING) 
 END as which_eye_s_infected, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ130 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ130 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ130 AS STRING) 
 END as is_sp_wearing_an_eye_patch, 

CASE
    WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) AS STRING) = '1' THEN 'Right' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) AS STRING) = '2' THEN 'Left' -- categorize string values 
WHEN SAFE_CAST(SAFE_CAST(ROUND(SAFE_CAST(VIQ141 AS FLOAT64),0) AS INT64) AS STRING) = '3' THEN 'Both' -- categorize string values 
WHEN VIQ141 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ141 AS STRING) 
 END as which_eye_has_eye_patch, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ150 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ150 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ150 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ150 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ150 AS STRING) 
 END as glasses_contact_lenses_for_near_work, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ160 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ160 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ160 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ160 AS STRING) 
 END as glasses_contact_lenses_available, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ170 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Glasses' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ170 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Contacts' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ170 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both glasses and contact lenses' -- categorize numeric values
WHEN VIQ170 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ170 AS STRING) 
 END as glasses_or_contacts_worn_for_near_test, 

CASE
    WHEN VIXNC1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXNC1 AS FLOAT64) 
 END as line_read_on_near_card, 

CASE
    WHEN VIXNC2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXNC2 AS FLOAT64) 
 END as testing_distance_of_near_card, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ180 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ180 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ180 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ180 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ180 AS STRING) 
 END as eye_surgery_for_near_sightedness, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ191 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ191 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ191 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ191 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ191 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ191 AS STRING) 
 END as which_eye_s_surgery_near_sightedness, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ200 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ200 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ200 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ200 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ200 AS STRING) 
 END as eye_surgery_for_cataracts, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ211 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Right' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ211 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Left' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ211 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ211 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ211 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ211 AS STRING) 
 END as which_eye_s_cataract_surgery, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ220 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ220 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ220 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Dont know' -- categorize numeric values
WHEN VIQ220 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ220 AS STRING) 
 END as glasses_contact_lenses_worn_for_distance, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ230 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ230 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ230 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ230 AS STRING) 
 END as is_distance_correction_available, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ240 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Glasses' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ240 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Contacts' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ240 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Both glasses and contact lenses' -- categorize numeric values
WHEN VIQ240 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ240 AS STRING) 
 END as which_type_glasses_or_contacts, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ250 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Yes' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIQ250 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'No' -- categorize numeric values
WHEN VIQ250 IS NULL THEN NULL 
ELSE SAFE_CAST(VIQ250 AS STRING) 
 END as was_prescription_obtained, 

CASE
    WHEN VIXPRS IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPRS AS FLOAT64) 
 END as prescription_right_sphere, 

CASE
    WHEN VIXPRC IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPRC AS FLOAT64) 
 END as prescription_right_cylinder, 

CASE
    WHEN VIXPRA IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPRA AS FLOAT64) 
 END as prescription_right_axis, 

CASE
    WHEN VIXPLS IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPLS AS FLOAT64) 
 END as prescription_left_sphere, 

CASE
    WHEN VIXPLC IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPLC AS FLOAT64) 
 END as prescription_left_cylinder, 

CASE
    WHEN VIXPLA IS NULL THEN NULL 
ELSE SAFE_CAST(VIXPLA AS FLOAT64) 
 END as prescription_left_axis, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Monovision glasses/contacts worn for visual acuity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Cataract contact lenses worn for objective refraction' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Contacts worn for objective refraction' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Artificial eye' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Monovision contacts worn for objective refraction' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Contact in right eye only for presenting visual acuity' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIXOCMT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Contact in left eye only for presenting visual acuity' -- categorize numeric values
WHEN VIXOCMT IS NULL THEN NULL 
ELSE SAFE_CAST(VIXOCMT AS STRING) 
 END as visual_acuity_comments, 

CASE
    WHEN VIXORSM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXORSM AS FLOAT64) 
 END as or_right_sphere_median, 

CASE
    WHEN VIXORCM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXORCM AS FLOAT64) 
 END as or_right_cylinder_median, 

CASE
    WHEN VIXORAM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXORAM AS FLOAT64) 
 END as or_right_axis_median, 

CASE
    WHEN VIDORFM IS NULL THEN NULL 
ELSE SAFE_CAST(VIDORFM AS FLOAT64) 
 END as or_right_confidence_level_reading, 

CASE
    WHEN VIXOLSM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXOLSM AS FLOAT64) 
 END as or_left_sphere_median, 

CASE
    WHEN VIXOLCM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXOLCM AS FLOAT64) 
 END as or_left_cylinder_median, 

CASE
    WHEN VIXOLAM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXOLAM AS FLOAT64) 
 END as or_left_axis_median, 

CASE
    WHEN VIDOLFM IS NULL THEN NULL 
ELSE SAFE_CAST(VIDOLFM AS FLOAT64) 
 END as or_left_confidence_level_reading, 

CASE
    WHEN VIXKRM1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRM1 AS FLOAT64) 
 END as right_keratometry_radius_flat_curve_mm, 

CASE
    WHEN VIXKRD1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRD1 AS FLOAT64) 
 END as right_keratometry_power_flat_curve_d, 

CASE
    WHEN VIXKRG1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRG1 AS FLOAT64) 
 END as right_keratometry_axis_flat_curve_deg, 

CASE
    WHEN VIXKRM2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRM2 AS FLOAT64) 
 END as right_keratometry_radius_steep_curve_mm, 

CASE
    WHEN VIXKRD2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRD2 AS FLOAT64) 
 END as right_keratometry_power_steep_curve_d, 

CASE
    WHEN VIXKRG2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRG2 AS FLOAT64) 
 END as right_keratometry_axis_steep_curve_deg, 

CASE
    WHEN VIXKRMM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRMM AS FLOAT64) 
 END as right_keratometry_radius_average_mm, 

CASE
    WHEN VIXKRDM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRDM AS FLOAT64) 
 END as right_keratometry_power_average_d, 

CASE
    WHEN VIXKRCD IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRCD AS FLOAT64) 
 END as right_keratometry_cylinder, 

CASE
    WHEN VIXKRCG IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKRCG AS FLOAT64) 
 END as right_keratometry_axis_deg, 

CASE
    WHEN VIXKLM1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLM1 AS FLOAT64) 
 END as left_keratometry_radius_flat_curve_mm, 

CASE
    WHEN VIXKLD1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLD1 AS FLOAT64) 
 END as left_keratometry_power_flat_curve_d, 

CASE
    WHEN VIXKLG1 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLG1 AS FLOAT64) 
 END as left_keratometry_axis_flat_curve_deg, 

CASE
    WHEN VIXKLM2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLM2 AS FLOAT64) 
 END as left_keratometry_radius_steep_curve_mm, 

CASE
    WHEN VIXKLD2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLD2 AS FLOAT64) 
 END as left_keratometry_power_steep_curve_d, 

CASE
    WHEN VIXKLG2 IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLG2 AS FLOAT64) 
 END as left_keratometry_axis_steep_curve_deg, 

CASE
    WHEN VIXKLMM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLMM AS FLOAT64) 
 END as left_keratometry_radius_average_mm, 

CASE
    WHEN VIXKLDM IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLDM AS FLOAT64) 
 END as left_keratometry_power_average_d, 

CASE
    WHEN VIXKLCD IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLCD AS FLOAT64) 
 END as left_keratometry_cylinder, 

CASE
    WHEN VIXKLCG IS NULL THEN NULL 
ELSE SAFE_CAST(VIXKLCG AS FLOAT64) 
 END as left_keratometry_axis_deg, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(20 AS FLOAT64),0) AS INT64) THEN '20/20' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN '20/25' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN '20/30' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN '20/40' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(50 AS FLOAT64),0) AS INT64) THEN '20/50' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(60 AS FLOAT64),0) AS INT64) THEN '20/60' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(80 AS FLOAT64),0) AS INT64) THEN '20/80' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(200 AS FLOAT64),0) AS INT64) THEN '20/200' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDRVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(666 AS FLOAT64),0) AS INT64) THEN '20/200+' -- categorize numeric values
WHEN VIDRVA IS NULL THEN NULL 
ELSE SAFE_CAST(VIDRVA AS STRING) 
 END as right_visual_acuity_presenting, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(20 AS FLOAT64),0) AS INT64) THEN '20/20' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN '20/25' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN '20/30' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN '20/40' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(50 AS FLOAT64),0) AS INT64) THEN '20/50' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(60 AS FLOAT64),0) AS INT64) THEN '20/60' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(80 AS FLOAT64),0) AS INT64) THEN '20/80' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(200 AS FLOAT64),0) AS INT64) THEN '20/200' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(666 AS FLOAT64),0) AS INT64) THEN '20/200+' -- categorize numeric values
WHEN VIDLVA IS NULL THEN NULL 
ELSE SAFE_CAST(VIDLVA AS STRING) 
 END as left_visual_acuity_presenting, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN '20/25' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN '20/30' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN '20/40' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(50 AS FLOAT64),0) AS INT64) THEN '20/50' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(60 AS FLOAT64),0) AS INT64) THEN '20/60' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(80 AS FLOAT64),0) AS INT64) THEN '20/80' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(200 AS FLOAT64),0) AS INT64) THEN '20/200' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDROVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(666 AS FLOAT64),0) AS INT64) THEN '20/200+' -- categorize numeric values
WHEN VIDROVA IS NULL THEN NULL 
ELSE SAFE_CAST(VIDROVA AS STRING) 
 END as right_visual_acuity_w_obj_refraction, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN '20/25' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN '20/30' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(40 AS FLOAT64),0) AS INT64) THEN '20/40' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(50 AS FLOAT64),0) AS INT64) THEN '20/50' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(60 AS FLOAT64),0) AS INT64) THEN '20/60' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(80 AS FLOAT64),0) AS INT64) THEN '20/80' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(200 AS FLOAT64),0) AS INT64) THEN '20/200' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(VIDLOVA AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(666 AS FLOAT64),0) AS INT64) THEN '20/200+' -- categorize numeric values
WHEN VIDLOVA IS NULL THEN NULL 
ELSE SAFE_CAST(VIDLOVA AS STRING) 
 END as left_visual_acuity_w_obj_refraction, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_vision_examination') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2007-2008/VIX_E.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/VIX_D.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2003-2004/VIX_C.htm
https://wwwn.cdc.gov/Nchs/Nhanes/2001-2002/VIX_B.htm
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/VIX.htm
*/
