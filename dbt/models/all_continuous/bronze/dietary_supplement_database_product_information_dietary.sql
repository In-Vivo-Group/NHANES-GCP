SELECT
CASE
    WHEN DSDPID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDPID AS FLOAT64) 
 END as supplement_id_number, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDPRDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Regular' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDPRDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Generic' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDPRDT AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Default' -- categorize numeric values
WHEN DSDPRDT IS NULL THEN NULL 
ELSE SAFE_CAST(DSDPRDT AS STRING) 
 END as product_type, 

CASE
    WHEN REPLACE(DSDSUPP,'.0','') = 'SUPPLEMENT NAME' THEN 'Value was recorded' -- categorize string values 
WHEN DSDSUPP IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSUPP AS STRING) 
 END as supplement_name, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Directly from manufacturer' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Directly from distributor' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Inferred from supplement name' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Physicians Desk Reference (PDR)' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Product Catalog' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(8 AS FLOAT64),0) AS INT64) THEN 'Internet Listing' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Supplement label or carton' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'Supplement from same manufacturer' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSRCE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(11 AS FLOAT64),0) AS INT64) THEN 'Dietary Supplement Label Database' -- categorize numeric values
WHEN DSDSRCE IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSRCE AS STRING) 
 END as supplement_information_source, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDTYPE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Infant/pediatric' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDTYPE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Prenatal' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDTYPE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Mature' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDTYPE AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Standard' -- categorize numeric values
WHEN DSDTYPE IS NULL THEN NULL 
ELSE SAFE_CAST(DSDTYPE AS STRING) 
 END as supplement_type, 

CASE
    WHEN DSDSERVQ IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSERVQ AS FLOAT64) 
 END as serving_size_quantity, 

CASE
    WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Caplet' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Capsule' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Dropper' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Drop' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(5 AS FLOAT64),0) AS INT64) THEN 'Fluid Ounce' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Gel Cap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(9 AS FLOAT64),0) AS INT64) THEN 'Lozenge' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(10 AS FLOAT64),0) AS INT64) THEN 'Milliliter' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(12 AS FLOAT64),0) AS INT64) THEN 'Package/Packet' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(13 AS FLOAT64),0) AS INT64) THEN 'Pill' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(14 AS FLOAT64),0) AS INT64) THEN 'Tablespoon/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(16 AS FLOAT64),0) AS INT64) THEN 'Softgel' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(17 AS FLOAT64),0) AS INT64) THEN 'Tablespoon/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(18 AS FLOAT64),0) AS INT64) THEN 'Tablet' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(19 AS FLOAT64),0) AS INT64) THEN 'Teaspoon/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(20 AS FLOAT64),0) AS INT64) THEN 'Wafer' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(21 AS FLOAT64),0) AS INT64) THEN 'Ounce/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(22 AS FLOAT64),0) AS INT64) THEN 'Spray/Squirt' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(24 AS FLOAT64),0) AS INT64) THEN 'Scoop/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(25 AS FLOAT64),0) AS INT64) THEN 'Cup/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(27 AS FLOAT64),0) AS INT64) THEN 'Chew' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(29 AS FLOAT64),0) AS INT64) THEN 'Vegicap' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(30 AS FLOAT64),0) AS INT64) THEN 'Can/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(31 AS FLOAT64),0) AS INT64) THEN 'Capful' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(32 AS FLOAT64),0) AS INT64) THEN 'Gumball' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(33 AS FLOAT64),0) AS INT64) THEN 'Gram/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(34 AS FLOAT64),0) AS INT64) THEN 'Teaspoon/Powder' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(37 AS FLOAT64),0) AS INT64) THEN 'Cup/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(38 AS FLOAT64),0) AS INT64) THEN 'Gram/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(39 AS FLOAT64),0) AS INT64) THEN 'Drop/Lozenge' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(42 AS FLOAT64),0) AS INT64) THEN 'Strip' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(43 AS FLOAT64),0) AS INT64) THEN 'Bottle/Liquid' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(DSDSERVU AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(99 AS FLOAT64),0) AS INT64) THEN 'Unknown' -- categorize numeric values
WHEN DSDSERVU IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSERVU AS STRING) 
 END as serving_size_unit, 

CASE
    WHEN DSDPREID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDPREID AS FLOAT64) 
 END as previous_product_id, 

CASE
    WHEN DSDORGID IS NULL THEN NULL 
ELSE SAFE_CAST(DSDORGID AS FLOAT64) 
 END as original_product_id, 

CASE
    WHEN DSDSGPF IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSGPF AS FLOAT64) 
 END as sequential_group_formulation, 

CASE
    WHEN DSDSEQF IS NULL THEN NULL 
ELSE SAFE_CAST(DSDSEQF AS FLOAT64) 
 END as sequential_formulation, 

CASE
    WHEN DSDLINRF IS NULL THEN NULL 
ELSE SAFE_CAST(DSDLINRF AS FLOAT64) 
 END as linear_formulation, 

CASE
    WHEN DSDCNTV IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCNTV AS FLOAT64) 
 END as count_of_vitamins_in_the_supplement, 

CASE
    WHEN DSDCNTM IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCNTM AS FLOAT64) 
 END as count_of_minerals_in_the_supplement, 

CASE
    WHEN DSDCNTA IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCNTA AS FLOAT64) 
 END as count_of_amino_acids_in_the_supplement, 

CASE
    WHEN DSDCNTB IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCNTB AS FLOAT64) 
 END as count_of_botanicals_in_the_supplement, 

CASE
    WHEN DSDCNTO IS NULL THEN NULL 
ELSE SAFE_CAST(DSDCNTO AS FLOAT64) 
 END as count_of_other_ingredients_in_supplement, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_dietary_supplement_database_product_information_dietary') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/1999-2000/DSPI.htm
*/
