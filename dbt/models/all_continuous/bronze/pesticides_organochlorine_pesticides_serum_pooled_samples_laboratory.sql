SELECT
CASE
WHEN SAMPLEID IS NULL THEN NULL 
ELSE SAFE_CAST(SAMPLEID AS FLOAT64) 
 END as pool_identification_number, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Mexican American' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Other Hispanic' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic White' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic Black' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(6 AS FLOAT64),0) AS INT64) THEN 'Non-Hispanic Asian' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDRETH3 AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(7 AS FLOAT64),0) AS INT64) THEN 'Other Race, Including Multiracial' -- categorize numeric values
WHEN RIDRETH3 IS NULL THEN NULL 
ELSE SAFE_CAST(RIDRETH3 AS STRING) 
 END as race_hispanic_origin, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN '12-19 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN '20-39 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(3 AS FLOAT64),0) AS INT64) THEN '40-59 years' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIDAGGRP AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(4 AS FLOAT64),0) AS INT64) THEN '60+ years' -- categorize numeric values
WHEN RIDAGGRP IS NULL THEN NULL 
ELSE SAFE_CAST(RIDAGGRP AS STRING) 
 END as age_group, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Male' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(RIAGENDR AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(2 AS FLOAT64),0) AS INT64) THEN 'Female' -- categorize numeric values
WHEN RIAGENDR IS NULL THEN NULL 
ELSE SAFE_CAST(RIAGENDR AS STRING) 
 END as gender, 

CASE
WHEN RIANSMP IS NULL THEN NULL 
ELSE SAFE_CAST(RIANSMP AS FLOAT64) 
 END as number_of_samples_in_a_pool, 

CASE
WHEN WTBSMSMA IS NULL THEN NULL 
ELSE SAFE_CAST(WTBSMSMA AS FLOAT64) 
 END as sum_of_adjusted_subsample_b_weights, 

CASE
WHEN LBCBHC IS NULL THEN NULL 
ELSE SAFE_CAST(LBCBHC AS FLOAT64) 
 END as beta_hexachlorocyclohexane_pg_g, 

CASE
WHEN LBCBHCLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCBHCLA AS FLOAT64) 
 END as b_hexachlorocyclohexane_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDBHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDBHCLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDBHCLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDBHCLC AS STRING) 
 END as beta_hexachlorocyclohexane_comment_code, 

CASE
WHEN LBCHCB IS NULL THEN NULL 
ELSE SAFE_CAST(LBCHCB AS FLOAT64) 
 END as hexachlorobenzene_pg_g, 

CASE
WHEN LBCHCBLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCHCBLA AS FLOAT64) 
 END as hexachlorobenzene_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDHCBLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDHCBLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDHCBLC AS STRING) 
 END as hexachlorobenzene_comment_code, 

CASE
WHEN LBCMIR IS NULL THEN NULL 
ELSE SAFE_CAST(LBCMIR AS FLOAT64) 
 END as mirex_pg_g, 

CASE
WHEN LBCMIRLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCMIRLA AS FLOAT64) 
 END as mirex_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDMIRLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDMIRLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDMIRLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDMIRLC AS STRING) 
 END as mirex_comment_code, 

CASE
WHEN LBCOXY IS NULL THEN NULL 
ELSE SAFE_CAST(LBCOXY AS FLOAT64) 
 END as oxychlordane_pg_g, 

CASE
WHEN LBCOXYLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCOXYLA AS FLOAT64) 
 END as oxychlordane_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDOXYLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDOXYLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDOXYLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDOXYLC AS STRING) 
 END as oxychlordane_comment_code, 

CASE
WHEN LBCPDE IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPDE AS FLOAT64) 
 END as p_p_dde_pg_g, 

CASE
WHEN LBCPDELA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPDELA AS FLOAT64) 
 END as p_p_dde_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDELC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDPDELC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPDELC AS STRING) 
 END as p_p_dde_comment_code, 

CASE
WHEN LBCPDT IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPDT AS FLOAT64) 
 END as p_p_ddt_pg_g, 

CASE
WHEN LBCPDTLA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCPDTLA AS FLOAT64) 
 END as p_p_ddt_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDPDTLC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDPDTLC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDPDTLC AS STRING) 
 END as p_p_ddt_comment_code, 

CASE
WHEN LBCTNA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTNA AS FLOAT64) 
 END as trans_nonachlor_pg_g, 

CASE
WHEN LBCTNALA IS NULL THEN NULL 
ELSE SAFE_CAST(LBCTNALA AS FLOAT64) 
 END as trans_nonachlor_lipid_adj_ng_g, 

CASE
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTNALC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(0 AS FLOAT64),0) AS INT64) THEN 'At or above the detection limit' -- categorize numeric values
WHEN SAFE_CAST(ROUND(SAFE_CAST(LBDTNALC AS FLOAT64),0) AS INT64) = SAFE_CAST(ROUND(SAFE_CAST(1 AS FLOAT64),0) AS INT64) THEN 'Below lower detection limit' -- categorize numeric values
WHEN LBDTNALC IS NULL THEN NULL 
ELSE SAFE_CAST(LBDTNALC AS STRING) 
 END as trans_nonachlor_comment_code, 

start_year,
end_year,
last_updated,
published_date,
parquet_filename,
data_file_url,
doc_file_url,
dataset,
 FROM {{ ref('stg_pesticides_organochlorine_pesticides_serum_pooled_samples_laboratory') }}

/* 
Docs utilized to generate this SQL can be found at:
https://wwwn.cdc.gov/Nchs/Nhanes/2013-2014/PSTPOL_H.htm
*/
